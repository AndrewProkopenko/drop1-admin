{"version":3,"sources":["libs/axios.js","components/Home/HomeList.js","components/Home/Home.js","components/Prefixes.js","components/Laptops/LaptopsBrands.js","components/Laptops/LaptopsServices.js","components/Laptops/Laptops.js","components/Meta/MetaForm.js","components/Meta/Meta.js","components/Services(Uslugi)/Services.js","components/Services(Uslugi)/Pages.js","components/Services(Uslugi)/InnerPages.js","RouterComponent.js","components/Sidebar.js","components/DrawerContainer.js","ScrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","interceptors","response","use","data","error","console","log","Promise","reject","HomeList","React","useState","content","setContent","services","setServices","isSuccessSave","setIsSuccessSave","newServTitle","setNewServTitle","newServSlug","setNewServSlug","newServPrice","setNewServPrice","file","setFile","useEffect","get","then","items","classes","makeStyles","theme","flexDiv","display","alignItems","marginTop","input","label","marginRight","useStyles","Grid","container","spacing","item","xs","lg","Typography","variant","Alert","severity","onSubmit","e","preventDefault","newId","forEach","id","newService","name","newServiceList","slice","push","sentData","put","FormGroup","row","TextField","type","required","value","onChange","target","className","accept","event","files","htmlFor","Button","color","component","undefined","size","startIcon","Divider","map","IconButton","onClick","filtered","filter","deleteService","img","style","title","multiline","rows","newData","dangerouslySetInnerHTML","__html","Home","Prefixes","prefixes","setPrefixes","laptops","newPrefix","LaptopsBrands","newBrands","newBrandName","setNewBrandName","newBrandSlug","setNewBrandSlug","setLaptops","brands","companies","handleInputNewBrand","List","ListItem","ListItemText","primary","secondary","slug","ListItemSecondaryAction","removeBrand","edge","aria-label","renderBrands","createdBrand","autoComplete","LaptopsServices","newServices","newServiceName","setNewServiceName","newServiceSlug","setNewServiceSlug","handleInputNewService","removeService","renderServices","createdService","Laptops","Fragment","gutterBottom","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","MetaForm","props","hendleSubmit","hendleTitle","desc","hendleDesc","Meta","heading","setHeading","newTitle","setNewTitle","newDesc","setNewDesc","meta","setMeta","page","useParams","location","useLocation","description","usePageViews","newMeta","Object","assign","Services","list","setList","labelId","role","dense","button","newList","currentItem","show","handleToggle","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","inputProps","Pages","border","palette","info","main","paddingLeft","paddingRight","paddingTop","paddingBottom","padding","fontWeight","unsave","marginLeft","success","light","metaTitle","setMetaTitle","metaDesc","setMetaDesc","setTitle","setSlug","listServices","setListServices","newServiceTitle","setNewServiceTitle","listBrands","setListBrands","newBrandsTitle","setNewBrandsTitle","newBrandsSlug","setNewBrandsSlug","isUnsavedService","setIsUnsavedService","isUnsavedBrand","setIsUnsavedBrand","isUnsavedMeta","setIsUnsavedMeta","addBrand","newItem","addService","length","InnerPages","category","setData","basicData","setBasicData","newSlug","setNewSlug","SetActive","a","newBasic","i","RouterComponent","exact","path","Sidebar","openComp","setOpenComp","openLap","setOpenLap","openMon","setOpenMon","openPO","setOpenPO","openMeta","setOpenMeta","to","ExpandLess","Collapse","in","timeout","unmountOnExit","disablePadding","TemporaryDrawer","left","state","setState","toggleDrawer","anchor","open","Drawer","onClose","ScrollToTop","pathname","window","scrollTo","top","behavior","App","Container","maxWidth","Paper","elevation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2504709f.chunk.js","sourcesContent":["import axios from 'axios' \r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:4545/',  \r\n})\r\n\r\ninstance.interceptors.response.use( (response) => {\r\n    if (response.data) return response.data\r\n    return response\r\n}, (error) => { \r\n    console.log(error)\r\n    return Promise.reject(error.response.data)\r\n})\r\n\r\nexport default instance","import React from \"react\"; \r\nimport axios from '../../libs/axios'\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { \r\n    Grid,\r\n    Paper, \r\n    FormGroup, \r\n    TextField, \r\n    Button , \r\n    IconButton,\r\n    Typography,\r\n    Divider\r\n} from '@material-ui/core'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\nfunction HomeList () {\r\n\r\n    let [content, setContent] = React.useState([])\r\n    let [services, setServices] = React.useState([])\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n    \r\n    let [newServTitle, setNewServTitle] = React.useState('')\r\n    let [newServSlug, setNewServSlug] = React.useState('')\r\n    let [newServPrice, setNewServPrice] = React.useState('')\r\n    let [file, setFile] = React.useState('')\r\n    \r\n    React.useEffect( () => {\r\n        axios.get('/main-list')\r\n            .then( (response) => {  \r\n                setContent(response.content)\r\n                setServices(response.items)\r\n            })\r\n    }, []) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        flexDiv: {\r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          marginTop: '1em', \r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n        label: { \r\n            marginRight: '1em',  \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    function handleInputContent(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n\r\n    function fileHendler(event) {  \r\n        setFile(event.target.files[0])\r\n    }\r\n\r\n    function hendleServiceAdd(e) {\r\n        e.preventDefault()\r\n\r\n        // генерируем новое уникальноe id\r\n        let newId = 0\r\n        services.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        let newService  = { \r\n            \"title\": newServTitle,\r\n            \"slug\": newServSlug,\r\n            \"price\": newServPrice,\r\n            \"img\": file.name || '', \r\n            \"id\": newId\r\n        }\r\n\r\n        let newServiceList = services.slice()\r\n        newServiceList.push(newService)\r\n        setServices(newServiceList)\r\n\r\n        let sentData = { \r\n            \"content\": content,\r\n            \"items\" : newServiceList, \r\n        } \r\n         \r\n        axios.put('/main-list', sentData)\r\n        .then( () => {\r\n            setIsSuccessSave(true)\r\n            setNewServTitle('')\r\n            setNewServSlug('')\r\n            setNewServPrice('')\r\n            setFile('')\r\n        }) \r\n    }\r\n\r\n    function deleteService(id) { \r\n        let filtered = services.filter( item => item.id !== id)\r\n\r\n        let sentData = {\r\n            \"content\": content,\r\n            \"items\" : filtered, \r\n        } \r\n        setServices(filtered)\r\n        axios.put('/main-list', sentData)\r\n    }\r\n \r\n    function renderPreview() {  \r\n        return services.map( item => {  \r\n            return ( \r\n                <li  key={item.id} >\r\n\r\n                <div className='btn-absolute right'>\r\n                    <IconButton \r\n                        variant=\"contained\"\r\n                        color=\"secondary\"   \r\n                        size={'medium'}\r\n                        onClick={()=>{deleteService(item.id)}}\r\n                    ><DeleteIcon /></IconButton>\r\n                </div>\r\n                \r\n                   \r\n                    <div> \r\n                            {\r\n                                item.img \r\n                            }\r\n                        <div className=\"img-cont \">\r\n\r\n                            <div className='img' style={{ \r\n                                ['-webkitMask']: `url(./images/${item.img}) no-repeat center`,\r\n                                mask: `url(./images/${item.img}) no-repeat center`\r\n                            }}></div>\r\n \r\n                            {/* <img src='./images/3.svg' fill=\"#fff\" alt='hi'/>  */}\r\n                            \r\n                            {/* <svg><use xlinkHref=\"./images/3.svg\"></use></svg> */}\r\n                        </div>\r\n                    </div> \r\n                    <h4>{item.title}</h4>\r\n                 \r\n            </li> \r\n            )\r\n        })\r\n    }\r\n    \r\n    function hendleButtonSave() { \r\n        const newData = { \r\n            \"content\": content, \r\n            \"items\" : services\r\n            \r\n        }\r\n        axios.put(\"/main-list\", newData)\r\n            .then( () => {\r\n                setIsSuccessSave(true) \r\n            })\r\n    }\r\n    return (\r\n        <div> \r\n            <Grid container spacing={3}> \r\n                <Grid item xs={12} lg={6} > \r\n                    <Typography variant={\"h6\"}>Наши преимущества</Typography> \r\n                     \r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <form \r\n                        onSubmit={hendleServiceAdd} \r\n                    >\r\n                        <FormGroup row> \r\n                            <TextField type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите название услуги'\r\n                                    value={newServTitle}\r\n                                    \r\n                                    onChange={(e)=>{ setIsSuccessSave(false); setNewServTitle(e.target.value)}}\r\n                                    className={'mr-2 mt-2 flex-grow-1'}\r\n                            />\r\n                              \r\n                        </FormGroup>\r\n                        <FormGroup row>  \r\n                           \r\n                           <div className={classes.flexDiv}>\r\n                                <input\r\n                                    accept=\"image/svg+xml\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\" \r\n                                    type=\"file\"\r\n                                    onChange={fileHendler}\r\n\r\n                                />\r\n                                <label htmlFor=\"contained-button-file\" className={classes.label}>\r\n                                    <Button variant=\"outlined\"  color='info' component=\"div\">\r\n                                        Выбрать картинку\r\n                                    </Button>\r\n                                </label>\r\n                                {\r\n                                    file.name !== undefined ?\r\n                                    <h6 className={classes.label}>Выбрано: {file.name}</h6> :\r\n                                    <span>Примечание: для выбора картинки <br/> доступен только формат svg</span>\r\n                                }\r\n                                \r\n                           </div>\r\n                        </FormGroup>\r\n                        \r\n                        <Button\r\n                            type={'submit'}\r\n                            className={\"mt-2\"}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size={'medium'}\r\n                            startIcon={<SaveIcon/>}\r\n                        >\r\n                            Добавить преимущество\r\n                        </Button>\r\n                    </form> \r\n                \r\n                </Grid>\r\n                <Grid item xs={12} lg={6}> \r\n                    <div className='preview-container'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <ul className='main-page-row'>\r\n                            {\r\n                                renderPreview()\r\n                            }\r\n                        </ul> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}> \r\n                <Grid item xs={12} lg={6} >\r\n                    <Typography variant={'h6'}>\r\n                        Введите текст для главной страницы  \r\n                    </Typography>\r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <FormGroup>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите контент'\r\n                                    value={content}\r\n                                    name='content'\r\n                                    onChange={handleInputContent} \r\n                                    multiline\r\n                                    rows={18} \r\n                                    className={'mt-2'}\r\n                        /> \r\n                    </FormGroup>\r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                        onClick={hendleButtonSave}\r\n                    >\r\n                        Сохранить текст главной страницы\r\n                    </Button> \r\n                </Grid>\r\n                <Grid item xs={12} lg={6} >\r\n                    <div className='preview-container  ml-1'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <div dangerouslySetInnerHTML={{__html: content}}></div> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeList","import React from 'react'\r\n\r\nimport HomeList from \"./HomeList\"\r\nimport HomeAdv from \"./HomeAdv\"\r\nimport HomeReviews from \"./HomeReviews\"\r\n\r\nimport {\r\n    Divider,\r\n    Button,\r\n\r\n} from '@material-ui/core';\r\n  \r\nfunction Home() {\r\n    \r\n    return (\r\n            <div> \r\n                {/* преимущества */}\r\n                <HomeList/>\r\n                \r\n                <Divider/>\r\n\r\n{/*                 \r\n                <HomeAdv/>\r\n                \r\n                <Divider/>\r\n\r\n                <HomeReviews/>    */}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport axios from '../libs/axios'\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { FormGroup, TextField, Button , Typography} from '@material-ui/core'\r\n\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction Prefixes () {\r\n\r\n    let [prefixes, setPrefixes] = React.useState([])\r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n\r\n    React.useEffect( () => {\r\n        axios.get('/prefixes')\r\n            .then(\r\n                response => {\r\n                    setPrefixes(response.laptops)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    function handleInput(e) {\r\n        setPrefixes(e.target.value)\r\n        setIsSuccessSave(false)\r\n    }\r\n\r\n    function hendleButtonSave(e) {\r\n        e.preventDefault()\r\n        const newPrefix = {\r\n            \"laptops\": prefixes\r\n        }\r\n        axios.put('/prefixes', newPrefix)\r\n            .then(\r\n                setIsSuccessSave(true)\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>Префикс для ноутбуков</Typography>\r\n            {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <form onSubmit={hendleButtonSave} >\r\n                <FormGroup>\r\n                    <TextField type='text'\r\n                               required\r\n                               variant=\"outlined\"\r\n                               label='Введите префикс'\r\n                               value={prefixes}\r\n                               name='prefix'\r\n                               onChange={handleInput}\r\n                               className={'mt-2'}\r\n                    />\r\n                </FormGroup>\r\n                <Button\r\n                    type={'submit'}\r\n                    className={\"mt-2\"}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size={'medium'}\r\n                    startIcon={<SaveIcon/>}\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Prefixes","import React from \"react\";\r\nimport axios from \"../../libs/axios\";\r\n\r\n\r\nimport {\r\n    Button,\r\n    List,\r\n    Grid, FormGroup, TextField, ListItemText, ListItemSecondaryAction, IconButton, ListItem\r\n} from '@material-ui/core';\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nfunction LaptopsBrands () {\r\n\r\n    let [newBrandName, setNewBrandName] = React.useState('')\r\n    let [newBrandSlug, setNewBrandSlug] = React.useState('')\r\n\r\n    let [laptops, setLaptops] = React.useState([])\r\n    let {brands, services, companies} = laptops\r\n\r\n    let newBrands\r\n    // let [newBrands, setNewBrands] = React.useState([])\r\n    if(brands) {\r\n        newBrands  = brands.slice()\r\n    }\r\n\r\n\r\n    React.useEffect( () => {\r\n        axios.get('/laptops')\r\n            .then(\r\n                response => {\r\n                    setLaptops(response)\r\n                    // console.log(response.brands)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    function handleInputNewBrand(e) {\r\n        if( e.target.name === 'name' )  setNewBrandName(e.target.value)\r\n        if( e.target.name === 'slug' )  setNewBrandSlug(e.target.value)\r\n    }\r\n\r\n    function addNewBrand(e) {\r\n        e.preventDefault()\r\n        let newId = 0\r\n        newBrands.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        let createdBrand = {\r\n            \"name\": newBrandName,\r\n            \"slug\": newBrandSlug,\r\n            \"id\": newId\r\n        }\r\n        newBrands.push(createdBrand)\r\n\r\n        let  sentData =  {\r\n            \"brands\" : newBrands,\r\n            \"services\": services\r\n        }\r\n\r\n        setLaptops(sentData)\r\n        axios.put('/laptops', sentData)\r\n\r\n\r\n        setNewBrandName('')\r\n        setNewBrandSlug('')\r\n    }\r\n\r\n    function removeBrand(id) {\r\n        let filtered = newBrands.filter( item => item.id !== id)\r\n\r\n        const sentData = {\r\n            \"brands\" : filtered,\r\n            \"services\": services,\r\n            \"companies\": companies\r\n        }\r\n\r\n        setLaptops(sentData)\r\n        axios.put('/laptops', sentData)\r\n    }\r\n\r\n    function renderBrands() {\r\n        if(newBrands) return (\r\n                <List className={'flex-list'}>\r\n                    {\r\n                        newBrands.map((item) => (\r\n                            <ListItem key={item.id}>\r\n                                <ListItemText\r\n                                    primary={`${item.name}`}\r\n                                    secondary={`slug: ${item.slug}, id: ${item.id}`}\r\n                                />\r\n                                <ListItemSecondaryAction\r\n                                    onClick={ () => removeBrand(item.id) }\r\n                                >\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        ))\r\n                    }\r\n                </List>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <Grid container>\r\n                <Grid item   >\r\n\r\n                    {\r\n                        renderBrands()\r\n                    }\r\n                    <h4 className={'heading'}>\r\n                        Добавить бренд\r\n                    </h4>\r\n                    <form\r\n                        onSubmit={addNewBrand}\r\n                    >\r\n                        <FormGroup>\r\n                            <TextField type='text'\r\n                                       autoComplete={'off'}\r\n                                       required\r\n                                       variant=\"outlined\"\r\n                                       label='Введите название бренда'\r\n                                       name='name'\r\n                                       value={newBrandName}\r\n                                       onChange={handleInputNewBrand}\r\n                                       className={'mt-2'}\r\n                            />\r\n                            <TextField type='text'\r\n                                       autoComplete={'off'}\r\n                                       required\r\n                                       variant=\"outlined\"\r\n                                       label='Введите слаг бренда'\r\n                                       name='slug'\r\n                                       value={newBrandSlug}\r\n                                       onChange={handleInputNewBrand}\r\n                                       className={'mt-2'}\r\n                            />\r\n                        </FormGroup>\r\n                        <Button\r\n                            type={'submit'}\r\n                            className={\"mt-2\"}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size={'medium'}\r\n                            startIcon={<SaveIcon/>}\r\n                        >\r\n                            Добавить бренд\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default LaptopsBrands","import React from \"react\";\r\nimport axios from \"../../libs/axios\";\r\n\r\n\r\nimport {\r\n    Button,\r\n    List,\r\n    Grid, FormGroup, TextField, ListItemText, ListItemSecondaryAction, IconButton, ListItem\r\n} from '@material-ui/core';\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nfunction LaptopsServices () {\r\n\r\n    let [newServiceName, setNewServiceName] = React.useState('')\r\n    let [newServiceSlug, setNewServiceSlug] = React.useState('')\r\n\r\n    let [laptops, setLaptops] = React.useState([])\r\n    let {brands, services, companies} = laptops\r\n\r\n    let newServices\r\n    if(services) {\r\n        newServices  = services.slice()\r\n    }\r\n\r\n\r\n    React.useEffect( () => {\r\n        axios.get('/laptops')\r\n            .then(\r\n                response => {  \r\n                    setLaptops(response)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    function handleInputNewService(e) {\r\n        if( e.target.name === 'name' )  setNewServiceName(e.target.value)\r\n        if( e.target.name === 'slug' )  setNewServiceSlug(e.target.value)\r\n    }\r\n\r\n    function addNewService(e) {\r\n        e.preventDefault()\r\n        let newId = 0\r\n        newServices.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        let createdService = {\r\n            \"name\": newServiceName,\r\n            \"slug\": newServiceSlug,\r\n            \"id\": newId\r\n        }\r\n        newServices.push(createdService)\r\n\r\n        const sentData = {\r\n            \"brands\" : brands,\r\n            \"services\": newServices, \r\n            \"companies\": companies\r\n        } \r\n\r\n        setLaptops(sentData)\r\n        axios.put('/laptops', sentData)\r\n\r\n        setNewServiceName('')\r\n        setNewServiceSlug('')\r\n    }\r\n\r\n    function removeService(id) {\r\n        let filtered = newServices.filter( item => item.id !== id)\r\n\r\n        const sentData = {\r\n            \"brands\" : brands,\r\n            \"services\": filtered\r\n        }\r\n\r\n        setLaptops(sentData)\r\n        axios.put('/laptops', sentData)\r\n    }\r\n\r\n    function renderServices() {\r\n        if(newServices) return (\r\n            <List className={'flex-list'}>\r\n                {\r\n                    newServices.map((item) => (\r\n                        <ListItem   key={item.id}>\r\n                            <ListItemText\r\n                                primary={`${item.name}`}\r\n                                secondary={`slug: ${item.slug}, id: ${item.id}`}\r\n                            />\r\n                            <ListItemSecondaryAction\r\n                                onClick={ () => removeService(item.id) }\r\n                            >\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item   >\r\n\r\n                {\r\n                    renderServices()\r\n                }\r\n                <h4 className={'heading'}>\r\n                    Добавить бренд\r\n                </h4>\r\n                <form\r\n                    onSubmit={addNewService}\r\n                >\r\n                    <FormGroup>\r\n                        <TextField type='text'\r\n                                   autoComplete={'off'}\r\n                                   required\r\n                                   variant=\"outlined\"\r\n                                   label='Введите название бренда'\r\n                                   name='name'\r\n                                   value={newServiceName}\r\n                                   onChange={handleInputNewService}\r\n                                   className={'mt-2'}\r\n                        />\r\n                        <TextField type='text'\r\n                                   autoComplete={'off'}\r\n                                   required\r\n                                   variant=\"outlined\"\r\n                                   label='Введите слаг бренда'\r\n                                   name='slug'\r\n                                   value={newServiceSlug}\r\n                                   onChange={handleInputNewService}\r\n                                   className={'mt-2'}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                    >\r\n                        Добавить бренд\r\n                    </Button>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default LaptopsServices","import React from \"react\";\r\n\r\nimport LaptopsBrands from './LaptopsBrands'\r\nimport LaptopsServices from \"./LaptopsServices\";\r\n\r\nimport {\r\n    Typography,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails\r\n} from '@material-ui/core';\r\n\r\nimport { ExpandMore } from '@material-ui/icons';\r\n\r\nfunction Laptops () {\r\n\r\n    return (\r\n        <React.Fragment >\r\n            <Typography variant=\"h6\" gutterBottom={true}>\r\n                Ремонт ноутбуков\r\n            </Typography>\r\n            <h5> \r\n                Примечание: для этой страницы тег h1 заполняется из метатега title\r\n            </h5>\r\n            <Accordion className={'accordion'} >\r\n                <AccordionSummary  expandIcon={<ExpandMore />}>\r\n                    Бренды\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <LaptopsBrands/>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion className={'accordion'}>\r\n                <AccordionSummary  expandIcon={<ExpandMore />}>\r\n                    Услуги\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <LaptopsServices/>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Laptops","\r\nimport React from \"react\";\r\nimport {Button, FormGroup, TextField} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nfunction MetaForm(props) {\r\n\r\n    return (\r\n        <form onSubmit={props.hendleSubmit}>\r\n            <FormGroup>\r\n                <TextField type='text'\r\n                           required\r\n                           variant=\"outlined\"\r\n                           label='Введите TITLE'\r\n                           value={props.title}\r\n                           name='prefix'\r\n                           onChange={props.hendleTitle}\r\n                           className={'mt-2'}\r\n                />\r\n                <TextField type='text'\r\n                           required\r\n                           variant=\"outlined\"\r\n                           label='Введите DESCRIPTION'\r\n                           value={props.desc}\r\n                           name='prefix'\r\n                           onChange={props.hendleDesc}\r\n                           className={'mt-2'}\r\n                />\r\n\r\n            </FormGroup>\r\n            <Button\r\n                type={'submit'}\r\n                className={\"mt-2\"}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size={'medium'}\r\n                startIcon={<SaveIcon/>}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MetaForm","import React from \"react\";\r\nimport axios from \"../../libs/axios\"\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\nimport { Typography} from \"@material-ui/core\";\r\nimport MetaForm from \"./MetaForm\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nfunction Meta(props) {\r\n\r\n    let [heading, setHeading] = React.useState('')\r\n    let [newTitle, setNewTitle] = React.useState('')\r\n    let [newDesc, setNewDesc] = React.useState('')\r\n\r\n    let [meta, setMeta] = React.useState([])\r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n\r\n    const {page} = useParams() \r\n\r\n    function usePageViews() {\r\n        let location = useLocation(); \r\n        React.useEffect(() => {\r\n\r\n            setIsSuccessSave(false)\r\n            axios.get('/meta')\r\n                .then(\r\n                    response => { \r\n                        setMeta(response) \r\n                        setHeading(response[page].name)\r\n                        setNewTitle(response[page].title)\r\n                        setNewDesc(response[page].description)\r\n                    }\r\n                )\r\n        }, [location]);\r\n    }\r\n\r\n\r\n    function hendleSubmit(e) {\r\n        e.preventDefault()\r\n        let newMeta = Object.assign({}, meta)\r\n        newMeta[page] = {\r\n            \"title\" : newTitle,\r\n            \"description\": newDesc,\r\n            \"name\": heading\r\n        }\r\n        console.log(newMeta, meta)\r\n        axios.put('/meta', newMeta)\r\n            .then(()=>{\r\n                setIsSuccessSave(true)\r\n            })\r\n\r\n    }\r\n\r\n    function hendleTitle(e) {\r\n        setNewTitle(e.target.value)\r\n        setIsSuccessSave(false)\r\n    }\r\n    function hendleDesc(e) {\r\n        setNewDesc(e.target.value)\r\n        setIsSuccessSave(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            { usePageViews() }\r\n            <Typography variant=\"h6\" gutterBottom={true}>\r\n                { heading }\r\n            </Typography>\r\n            {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <MetaForm\r\n                title={newTitle}\r\n                desc={newDesc}\r\n                hendleTitle={hendleTitle}\r\n                hendleDesc={hendleDesc}\r\n                hendleSubmit={hendleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport axios from '../../libs/axios'\r\n\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Checkbox,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    Typography, \r\n    Button,\r\n    FormGroup,\r\n    TextField,\r\n    Divider\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nfunction Services() {\r\n\r\n    let [list, setList] = React.useState([]) \r\n    let [content, setContent] = React.useState('') \r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false) \r\n\r\n\r\n    React.useEffect(  () => { \r\n        axios.get('/uslugi')\r\n            .then(\r\n                response => {\r\n                    setList(response.items) \r\n                    setContent(response.content)\r\n                }\r\n            )\r\n    }, []) \r\n\r\n    console.log(list)\r\n    function handleInput(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    } \r\n      \r\n    function handleToggle(id) { \r\n        let newList = list.slice()\r\n        const currentItem = newList[id-1]\r\n        currentItem.show = !currentItem.show\r\n\r\n        setList(newList) \r\n        setIsSuccessSave(false) \r\n    };\r\n\r\n    function saveData(e) {\r\n        e.preventDefault() \r\n        const newList = {\r\n            \"uslugi\" : list,\r\n            \"content\": content\r\n        }\r\n        axios.put('/pages/', newList)\r\n        .then( () => { \r\n                setIsSuccessSave(true)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={'h6'}>\r\n                Введите текст для страницы \"Услуги\"\r\n            </Typography>\r\n            {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <FormGroup>\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Введите контент(h1 и тд.)'\r\n                            value={content}\r\n                            name='content'\r\n                            onChange={handleInput} \r\n                            multiline\r\n                            rows={3} \r\n                            className={'mt-2'}\r\n                />\r\n            </FormGroup>\r\n\r\n            <div className='preview-container'>\r\n                <h3 className='preview-head'>Превью :</h3>\r\n                <Divider/>\r\n                <div dangerouslySetInnerHTML={{__html: content}}></div> \r\n            </div>\r\n\r\n            <Typography variant={'h6'}  className='mt-2'>\r\n                Выберите страницы, которые будут показаны в списке \r\n            </Typography>\r\n            <List >\r\n                    {\r\n                        list.map((value) => {\r\n                            const labelId = `checkbox-list-label-${value.id}`; \r\n                            return (\r\n                                <ListItem key={value.id} role={undefined} dense button onClick={()=>{handleToggle(value.id)}}>\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            checked={value.show}\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText \r\n                                        id={labelId} \r\n                                        primary={`${value.name}`}  \r\n                                    />\r\n                                </ListItem>\r\n                            );\r\n                        })\r\n                    } \r\n            </List>\r\n            \r\n            <Button \r\n                className={\"mt-2\"}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size={'medium'}\r\n                startIcon={<SaveIcon/>}\r\n                onClick={saveData}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","import React from 'react'\r\nimport axios from '../../libs/axios'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\nimport { \r\n    Typography,\r\n    FormGroup,  \r\n    TextField , \r\n    Button,\r\n    Divider,\r\n    Grid,\r\n    List,\r\n    ListItem, \r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\nimport { Alert } from '@material-ui/lab';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'; \r\n \r\n \r\n// функция для редактирования текста в компонентах  \r\nfunction Pages() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        list: {\r\n            border: `2px solid ${theme.palette.info.main}`, \r\n            marginTop: 15,  \r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            \r\n        }, \r\n        heading: {\r\n            display: 'block', \r\n            padding: '16px', \r\n            fontWeight: 700\r\n        },\r\n        unsave: {\r\n            color: theme.palette.error.main, \r\n            marginLeft: 16\r\n        }, \r\n       \r\n        meta: { \r\n            marginTop: 15,  \r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            border: `2px solid ${theme.palette.success.light}`, \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const {page} = useParams()\r\n \r\n    let [metaTitle, setMetaTitle] = React.useState('')\r\n    let [metaDesc, setMetaDesc] = React.useState('')\r\n\r\n    let [heading, setHeading] = React.useState('') \r\n    let [title, setTitle] = React.useState('') \r\n    let [content, setContent] = React.useState('')   \r\n    let [slug, setSlug] = React.useState('')   \r\n    let [listServices, setListServices] = React.useState('')   \r\n    let [newServiceTitle, setNewServiceTitle] = React.useState('')   \r\n    let [newServiceSlug, setNewServiceSlug] = React.useState('')   \r\n\r\n    let [listBrands, setListBrands] = React.useState('')   \r\n    let [newBrandsTitle, setNewBrandsTitle] = React.useState('')   \r\n    let [newBrandsSlug, setNewBrandsSlug] = React.useState('')   \r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n    let [isUnsavedService, setIsUnsavedService] = React.useState(false)\r\n    let [isUnsavedBrand, setIsUnsavedBrand] = React.useState(false)\r\n    let [isUnsavedMeta, setIsUnsavedMeta] = React.useState(false)\r\n     \r\n \r\n    function usePageViews() {\r\n        let location = useLocation(); \r\n        React.useEffect(() => {\r\n             \r\n\r\n            setIsSuccessSave(false)\r\n            axios.get(`${page}`)\r\n                .then(\r\n                    response => { \r\n                        console.log(response) \r\n                        setMetaTitle(response.meta.title)\r\n                        setMetaDesc(response.meta.description)\r\n                        setContent(response.content)\r\n                        setTitle(response.title)\r\n                        setHeading(response.title)  \r\n                        setSlug(response.slug)\r\n                        setListServices(response['list-service-menu'])\r\n                        if(response['list-brands-menu']) {\r\n                            setListBrands(response['list-brands-menu'])\r\n                        }\r\n                        else setListBrands([])\r\n                    }\r\n                ) \r\n        }, [location]);\r\n    }\r\n   \r\n    function handleInputContent(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n    function handleInputTitle(e) {\r\n        setTitle(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n    function handleInputSlug(e) {\r\n        setTitle(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n\r\n    function removeBrand(id) {  \r\n        let filtered = listBrands.filter( item => item.id !== id)\r\n \r\n        setListBrands(filtered)\r\n        \r\n        setIsUnsavedBrand(true)\r\n    }\r\n    function addBrand(e) { \r\n        e.preventDefault()\r\n        let newId = 0\r\n        let newList = listBrands.slice()\r\n\r\n        newList.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        const newItem = { \r\n            \"title\": newBrandsTitle,\r\n            \"slug\": newBrandsSlug, \r\n            \"id\": newId, \r\n            \"content\": \"\"\r\n        }\r\n        newList.push(newItem)\r\n\r\n        setListBrands(newList)\r\n        setIsUnsavedBrand(true)\r\n\r\n        setNewBrandsSlug('')\r\n        setNewBrandsTitle('')\r\n    }\r\n\r\n    function removeService(id) {  \r\n        let filtered = listServices.filter( item => item.id !== id)\r\n \r\n        setListServices(filtered)\r\n        \r\n        setIsUnsavedService(true)\r\n    }\r\n    function addService(e) { \r\n        e.preventDefault()\r\n        let newId = 0\r\n        let newList = listServices.slice()\r\n\r\n        newList.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        const newItem = { \r\n            \"title\": newServiceTitle,\r\n            \"slug\": newServiceSlug, \r\n            \"id\": newId, \r\n            \"content\": \"\", \r\n            \"meta\": {\r\n                \"title\": \"\", \r\n                \"description\": \"\"\r\n            }\r\n        }\r\n        newList.push(newItem)\r\n\r\n        setListServices(newList)\r\n        setIsUnsavedService(true)\r\n\r\n        setNewServiceSlug('')\r\n        setNewServiceTitle('')\r\n    }\r\n     \r\n    function hendleButtonSave() {  \r\n        const newData = {\r\n            \"title\": title,\r\n            \"slug\": slug, \r\n            \"meta\": {\r\n                \"title\": metaTitle,\r\n                \"description\" : metaDesc\r\n            },\r\n            \"content\": content, \r\n            \"list-service-menu\":  listServices,\r\n            \"list-brands-menu\":  listBrands\r\n        }\r\n        // console.log(newData)\r\n        axios.put(`/${page}`, newData)\r\n            .then( () => {\r\n                setIsSuccessSave(true)\r\n                setIsUnsavedService(false)\r\n                setIsUnsavedBrand(false)\r\n                setIsUnsavedMeta(false)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    function renderServices() { \r\n        if(listServices) return (\r\n            <List className={classes.list}>\r\n                <Typography variant='div' className={classes.heading}>\r\n                    Список страниц (используется в шапке и на главной )\r\n                </Typography>\r\n                {\r\n                    listServices.map( (item) => (\r\n                \r\n                        <ListItem key={item.id}>\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={`slug: ${item.slug} `}\r\n                            > \r\n                            </ListItemText>\r\n                            <ListItemSecondaryAction\r\n                                    onClick={ () => removeService(item.id) }\r\n                            >\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction> \r\n                        </ListItem>\r\n                    )) \r\n                }\r\n                \r\n                <form onSubmit={addService}>\r\n                <FormGroup row>\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте название страницы'\r\n                                value={newServiceTitle}\r\n                                name='title'\r\n                                onChange={(e) => { setNewServiceTitle(e.target.value)  }}  \r\n                                className={'mt-2 mr-2 ml-1 flex-grow-1'}\r\n                    /> \r\n                </FormGroup>\r\n                <FormGroup row>\r\n                   \r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте slug страницы'\r\n                                value={newServiceSlug}\r\n                                name='title'\r\n                                onChange={(e) => { setNewServiceSlug(e.target.value)  }}  \r\n                                className={'mt-2 ml-1 mr-2'}\r\n                    /> \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2 mr-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'small'}\r\n                        startIcon={<AddCircleOutlineIcon/>} \r\n                    >\r\n                        Добавить\r\n                    </Button> \r\n                    \r\n                </FormGroup>\r\n                \r\n                </form>\r\n                {\r\n                    isUnsavedService && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n                }\r\n            </List>\r\n        ) \r\n    }\r\n\r\n    function renderBrands() {\r\n        if(listBrands.length > 0) return (\r\n            <List className={classes.list}>\r\n                <Typography variant='div' className={classes.heading}>\r\n                    Список Брендов (используется в шапке и на главной )\r\n                </Typography>\r\n                {\r\n                    listBrands.map( (item) => (\r\n                \r\n                        <ListItem key={item.id}>\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={`slug: ${item.slug} `}\r\n                            > \r\n                            </ListItemText>\r\n                            <ListItemSecondaryAction\r\n                                    onClick={ () => removeBrand(item.id) }\r\n                            >\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction> \r\n                        </ListItem>\r\n                    )) \r\n                }\r\n                <form onSubmit={addBrand}>\r\n                <FormGroup row>\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте название страницы'\r\n                                value={newBrandsTitle}\r\n                                name='title'\r\n                                onChange={(e) => { setNewBrandsTitle(e.target.value)  }}  \r\n                                className={'mt-2 mr-2 ml-1 flex-grow-1'}\r\n                    />\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте slug страницы'\r\n                                value={newBrandsSlug}\r\n                                name='title'\r\n                                onChange={(e) => { setNewBrandsSlug(e.target.value)  }}  \r\n                                className={'mt-2 mr-2'}\r\n                    /> \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2 mr-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'small'}\r\n                        startIcon={<AddCircleOutlineIcon/>} \r\n                    >\r\n                        Добавить\r\n                    </Button> \r\n                    \r\n                </FormGroup>\r\n                </form>\r\n                {\r\n                    isUnsavedBrand && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n                }\r\n            </List>\r\n        )\r\n    }\r\n\r\n    function renderMeta() {\r\n        return <div className={classes.meta}>\r\n             <Typography variant='div' className={classes.heading}>\r\n                Мета-данные для страницы \"{heading}\"\r\n            </Typography> \r\n            <FormGroup>\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Title'\r\n                            value={metaTitle} \r\n                            onChange={(e) => { setMetaTitle(e.target.value); setIsUnsavedMeta(true)  }}  \r\n                            className={'mt-2 mr-2  flex-grow-1'}\r\n                />\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Description'\r\n                            value={metaDesc} \r\n                            onChange={(e) => { setMetaDesc(e.target.value); setIsUnsavedMeta(true)    }}  \r\n                            className={'mt-2 mr-2'}\r\n                /> \r\n                \r\n                \r\n            </FormGroup> \r\n            {\r\n                isUnsavedMeta && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n            }\r\n        </div>\r\n    }\r\n\r\n   \r\n    return (\r\n        <div>\r\n            {usePageViews()}\r\n            <Grid container>\r\n                <Grid item lg={6}>\r\n                    <Typography variant={'h6'}>\r\n                        Введите текст для страницы \"{heading}\"\r\n                    </Typography>\r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <FormGroup>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите контент'\r\n                                    value={content}\r\n                                    name='content'\r\n                                    onChange={handleInputContent} \r\n                                    multiline\r\n                                    rows={18} \r\n                                    className={'mt-2'}\r\n                        /> \r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите название страницы'\r\n                                    value={title}\r\n                                    name='title'\r\n                                    onChange={handleInputTitle}  \r\n                                    className={'mt-2 mr-2'}\r\n                        />\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите slug страницы'\r\n                                    value={slug}\r\n                                    name='title'\r\n                                    onChange={handleInputSlug}  \r\n                                    className={'mt-2'}\r\n                        /> \r\n                        \r\n                    </FormGroup>\r\n                    \r\n                    {\r\n                        renderServices()\r\n                    }\r\n\r\n                    {\r\n                        renderBrands()\r\n                    }\r\n\r\n                    {\r\n                        renderMeta()\r\n                    }\r\n                    \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                        onClick={hendleButtonSave}\r\n                    >\r\n                        Сохранить\r\n                    </Button> \r\n                    \r\n                    \r\n                </Grid>      \r\n\r\n                <Grid item lg={6}> \r\n                    <div className='preview-container ml-1'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <div dangerouslySetInnerHTML={{__html: content}}></div> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\nimport axios from '../../libs/axios'\r\nimport {useParams, useLocation} from 'react-router-dom'\r\n\r\n\r\nimport { \r\n    Typography,\r\n    FormGroup,  \r\n    TextField , \r\n    Button,\r\n    Divider,\r\n    Grid, \r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction InnerPages() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        \r\n        heading: {\r\n            display: 'block', \r\n            padding: '16px', \r\n            fontWeight: 700\r\n        },\r\n       \r\n        meta: { \r\n            marginTop: 15,  \r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            border: `2px solid ${theme.palette.success.light}`, \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const {category, page} = useParams()\r\n    \r\n    let [metaTitle, setMetaTitle] = React.useState('')\r\n    let [metaDesc, setMetaDesc] = React.useState('')\r\n\r\n    let [data, setData] = React.useState({})\r\n    let [basicData, setBasicData] = React.useState({})\r\n    \r\n    let [content, setContent] = React.useState('')   \r\n    let [listServices, setListServices] = React.useState([]) \r\n    let [listBrands, setListBrands] = React.useState('')   \r\n\r\n    let [newTitle, setNewTitle] = React.useState('')   \r\n    let [newSlug, setNewSlug] = React.useState('')   \r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n    let [isUnsavedMeta, setIsUnsavedMeta] = React.useState(false)\r\n\r\n    function usePageViews() {\r\n        let location = useLocation(); \r\n        React.useEffect( async () => {\r\n              \r\n            setIsSuccessSave(false)\r\n            await axios.get(`${category}`)\r\n                .then(\r\n                    response => {  \r\n                        setBasicData(response) \r\n                         \r\n                        if(response['list-brands-menu']) {\r\n                            setListBrands(response['list-brands-menu'])\r\n                        }\r\n                        else setListBrands([])\r\n                        if(response['list-service-menu']) {\r\n                            setListServices(response['list-service-menu'])\r\n                            console.log(response['list-service-menu'])\r\n                        }\r\n                         \r\n                        SetActive(response)\r\n                    }\r\n                )\r\n                  \r\n        }, [location]);\r\n    }\r\n\r\n    function SetActive(response) {\r\n   \r\n        if(response['list-service-menu'] && response['list-service-menu'].length > 0) {\r\n            response['list-service-menu'].forEach( (item) => {\r\n                if(item.slug == page) {\r\n                    setContent(item.content)\r\n                    setData(item) \r\n                    setNewTitle(item.title)\r\n                    setNewSlug(item.slug)\r\n                    setMetaTitle(item.meta.title)\r\n                    setMetaDesc(item.meta.description)\r\n                }\r\n            })    \r\n        } \r\n        if(response['list-brands-menu'] && response['list-brands-menu'].length > 0) {  \r\n            response['list-brands-menu'].forEach( (item) => {\r\n                if(item.slug === page) {\r\n                    setContent(item.content)\r\n                    setData(item)  \r\n                    setNewTitle(item.title)\r\n                    setNewSlug(item.slug)\r\n                    setMetaTitle(item.meta.title)\r\n                    setMetaDesc(item.meta.description)\r\n                } \r\n            })\r\n        } \r\n\r\n    } \r\n    \r\n    \r\n    function handleInputContent(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n\r\n    function hendleButtonSave() {  \r\n        let newBasic = {\r\n            \"title\": basicData.title,\r\n            \"slug\": basicData.slug,\r\n            \"content\": basicData.content,\r\n            \"meta\": basicData.meta\r\n        }\r\n        // newData новый элемент, тот который только что правили\r\n        let newData = {\r\n            \"id\": data.id,\r\n            \"title\": newTitle,\r\n            \"slug\": newSlug, \r\n            \"content\": content,\r\n            \"meta\": {\r\n                \"title\": metaTitle,\r\n                \"description\" : metaDesc\r\n            }\r\n        }\r\n        if(listServices.length > 0) {\r\n            newBasic[\"list-service-menu\"] =  listServices \r\n        }\r\n        if(listBrands.length > 0) {\r\n            newBasic[\"list-brands-menu\"] =  listBrands  \r\n        }\r\n \r\n        for( let i = 0; i < basicData['list-brands-menu'].length; i++) { \r\n            if(basicData['list-brands-menu'][i].slug == page) {  \r\n                newBasic['list-brands-menu'][i] = newData\r\n            }\r\n        }\r\n\r\n        for( let i = 0; i < basicData['list-service-menu'].length; i++) { \r\n            if(basicData['list-service-menu'][i].slug == page) {  \r\n                newBasic['list-service-menu'][i] = newData\r\n            }\r\n        }\r\n        \r\n        console.log(category)\r\n        // console.log(newBasic)\r\n        axios.put(`/${category}`, newBasic)\r\n            .then( () => {\r\n                setIsSuccessSave(true) \r\n            })\r\n    }\r\n\r\n    \r\n    function renderMeta() {\r\n        return <div className={classes.meta}>\r\n             <Typography variant='div' className={classes.heading}>\r\n                Мета-данные для страницы \"{data.title}\"\r\n            </Typography> \r\n            <FormGroup>\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Title'\r\n                            value={metaTitle} \r\n                            onChange={(e) => { setMetaTitle(e.target.value); setIsUnsavedMeta(true)  }}  \r\n                            className={'mt-2 mr-2  flex-grow-1'}\r\n                />\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Description'\r\n                            value={metaDesc} \r\n                            onChange={(e) => { setMetaDesc(e.target.value); setIsUnsavedMeta(true)    }}  \r\n                            className={'mt-2 mr-2'}\r\n                /> \r\n                \r\n                \r\n            </FormGroup> \r\n            {\r\n                isUnsavedMeta && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n            }\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { usePageViews() }  \r\n            <Grid container>\r\n                <Grid item lg={6}>\r\n                    <Typography variant={'h6'}>\r\n                        Введите текст для страницы \"{data.title}\"\r\n                    </Typography>\r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <FormGroup>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите контент'\r\n                                    value={content}\r\n                                    name='content'\r\n                                    onChange={handleInputContent} \r\n                                    multiline\r\n                                    rows={18} \r\n                                    className={'mt-2'}\r\n                        /> \r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте название страницы'\r\n                                value={newTitle} \r\n                                onChange={(e) => { setNewTitle(e.target.value)  }}  \r\n                                className={'mt-2 mr-2 flex-grow-1'}\r\n                    />\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте slug страницы'\r\n                                value={newSlug} \r\n                                onChange={(e) => { setNewSlug(e.target.value)  }}  \r\n                                className={'mt-2 '}\r\n                    /> \r\n                    \r\n                    \r\n                    </FormGroup>\r\n                    \r\n                    {\r\n                        renderMeta()\r\n                    }\r\n                     \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                        onClick={hendleButtonSave}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n                     \r\n                </Grid>      \r\n\r\n                <Grid item lg={6}> \r\n                    <div className='preview-container ml-1'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <div dangerouslySetInnerHTML={{__html: data.content}}></div> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InnerPages ","import React from \"react\";\r\nimport { Route, Switch} from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home/Home\";\r\nimport Prefixes from \"./components/Prefixes\";\r\nimport Laptops from \"./components/Laptops/Laptops\";\r\nimport Meta from \"./components/Meta/Meta\"\r\nimport Services from \"./components/Services(Uslugi)/Services\";\r\nimport Pages from \"./components/Services(Uslugi)/Pages\";\r\nimport InnerPages from \"./components/Services(Uslugi)/InnerPages\";\r\n\r\nfunction RouterComponent () {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/prefixes\" component={Prefixes}  /> \r\n            <Route exact path=\"/content/content-remont-noutbukov\" component={Laptops}  />\r\n\r\n            <Route exact path=\"/content/uslugi\" component={Services}  />\r\n\r\n            <Route exact path=\"/content/pages/:page\" component={Pages}  />\r\n\r\n            <Route exact path=\"/content/inner-pages/:category/:page\" component={InnerPages}  />\r\n\r\n            <Route path=\"/meta/:page\" component={Meta}   />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default  RouterComponent","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\r\nimport {List, ListItem, ListItemText, Collapse} from \"@material-ui/core\";\r\n\r\nimport data from '../data/database.json'\r\n\r\nfunction Sidebar() {\r\n\r\n    const [openComp, setOpenComp] = React.useState(false); \r\n    const [openLap, setOpenLap] = React.useState(false); \r\n    const [openMon, setOpenMon] = React.useState(false); \r\n    const [openPO, setOpenPO] = React.useState(false); \r\n    const [openMeta, setOpenMeta] =  React.useState(false);\r\n \r\n    const handleClickMeta = () => {     setOpenMeta(!openMeta); };\r\n\r\n    return (\r\n \r\n        <List >\r\n            <NavLink exact to='/'>\r\n                <ListItem button>\r\n                    <ListItemText primary={'Главная '}/>\r\n                </ListItem>\r\n            </NavLink>  \r\n            \r\n            {/* contacts */}\r\n            <NavLink exact to='/content/pages/contacts'>\r\n                <ListItem button>\r\n                    <ListItemText primary={'Контакты'}/>\r\n                </ListItem>\r\n            </NavLink>\r\n            \r\n\r\n                {/* 1 */}\r\n               <ListItem button onClick={() => { setOpenComp(!openComp); }}>\r\n                    <ListItemText primary=\"Ремонт компьютеров\" secondary={\"Наполнение страниц\"} />\r\n                    {openComp ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openComp} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/content/pages/remont-kompyutepov'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт компьютеров - Главная'} className={'pl-3'} />\r\n                            </ListItem>\r\n                        </NavLink> \r\n                        {\r\n                            data['remont-kompyutepov']['list-service-menu'].map( (item) => (\r\n                                <NavLink key={item.id} exact to={`/content/inner-pages/remont-kompyutepov/${item.slug}`}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={item.title} className={'pl-3'} />\r\n                                    </ListItem>\r\n                                </NavLink> \r\n                            ))\r\n                        }\r\n                         \r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* 2 */}\r\n               <ListItem button onClick={() => { setOpenLap(!openLap); }}>\r\n                    <ListItemText primary=\"Ремонт ноутбуков\" secondary={\"Наполнение страниц\"} />\r\n                    {openLap ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openLap} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/content/pages/remont-noutbukov'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт ноутбуков - Главная '} className={'pl-3'}  />\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        {\r\n                            data['remont-noutbukov']['list-service-menu'].map( (item) => (\r\n                                <NavLink key={item.id} exact to={`/content/inner-pages/remont-noutbukov/${item.slug}`}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={item.title} className={'pl-3'} />\r\n                                    </ListItem>\r\n                                </NavLink> \r\n                            ))\r\n                        }\r\n                        {\r\n                            data['remont-noutbukov']['list-brands-menu'].map( (item) => (\r\n                                <NavLink key={item.id} exact to={`/content/inner-pages/remont-noutbukov/${item.slug}`}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={item.title} className={'pl-3'} />\r\n                                    </ListItem>\r\n                                </NavLink> \r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* 3 */}\r\n               <ListItem button onClick={() => { setOpenMon(!openMon); }}>\r\n                    <ListItemText primary=\"Ремонт мониторов\" secondary={\"Наполнение страниц\"} />\r\n                    {openMon ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openMon} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/content/pages/remont-monitorov'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт мониторов - Главная '} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* 4 */}\r\n               <ListItem button onClick={() => { setOpenPO(!openPO); }}>\r\n                    <ListItemText primary=\"Настройка ПО\" secondary={\"Наполнение страниц\"} />\r\n                    {openPO ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openPO} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding> \r\n                        <NavLink exact to='/content/pages/nastrojka-po'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Настройка ПО - Главная '} className={'pl-3'} />\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* meta */}\r\n                <ListItem button onClick={handleClickMeta}>\r\n                    <ListItemText primary=\"TITLE, DESCRIPTION \" secondary={'Задать страницам мета-теги'} />\r\n                    {openMeta ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openMeta} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/meta/main' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Главная'} secondary={\"path: /\"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Услуги'} secondary={\"path: /uslugi\"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-garantiynyy-remont' >\r\n                            <ListItem button   >\r\n                                <ListItemText primary={'Гарантийный ремонт'} secondary={\"path: /uslugi/garantiynyy-remont\"} className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-remont-kompyuterov' >\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт компьютеров'} secondary={\"path: /uslugi/remont-kompyuterov\"}  className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-remont-noutbukov' >\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт ноутбуков'} secondary={\"path: /uslugi/remont-noutbukov\"}  className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-remont-istochnikov-bespereboynogo-pitaniya-i-stabilizatorov-napryazheniya' >\r\n                            <ListItem button  >\r\n                                <ListItemText primary={'Ремонт источников бесперебойного питания и стабилизаторов напряжения'}\r\n                                              secondary={\"path: /uslugi/remont-istochnikov-bespereboynogo-pitaniya-i-stabilizatorov-napryazheniya\"}  className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-remont-printerov-mfu-kopirov' >\r\n                            <ListItem button  >\r\n                                <ListItemText primary={'Ремонт принтеров, МФУ, копиров'} secondary={\"path: /uslugi/remont-printerov-mfu-kopirov\"}  className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-remont-planshetov-i-smartfonov' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Ремонт планшетов и смартфонов'} secondary={\"path: /uslugi/remont-planshetov-i-smartfonov\"}  className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/uslugi-platnyy-remont' >\r\n                            <ListItem button   >\r\n                                <ListItemText primary={'Платный ремонт'} secondary={\"path: /uslugi/platnyy-remont\"}  className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/price' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Цены'} secondary={\"path: /price\"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/o-nas' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'О нас'} secondary={\"path: /o-nas \"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/o-nas-garantiynoye-obsluzhivaniye' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Гарантийное обслуживание'} secondary={\"path: /garantiynoye-obsluzhivaniye\"} className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/o-nas-nashi-vendory' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Наши авторизации'} secondary={\"path: /nashi-vendory\"} className={'pl-5'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/novosti' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Новости'} secondary={\"path: /novosti\"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/otzyvy' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Отзывы'} secondary={\"path: /otzyvy\"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        <NavLink exact to='/meta/kontakty' >\r\n                            <ListItem button >\r\n                                <ListItemText primary={'Контакты'} secondary={\"path: /kontakty\"} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n\r\n                    </List>\r\n                </Collapse>   \r\n\r\n              \r\n        </List> \r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react';  \r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button'; \r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n\r\nimport Sidebar from \"./Sidebar\"; \r\n \r\n\r\nexport default function TemporaryDrawer() { \r\n  const [state, setState] = React.useState({ \r\n    left: false, \r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => { \r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n \r\n  const list = (anchor) => (\r\n    <div \r\n      className='sidebar'\r\n      role=\"presentation\"\r\n      // onClick={toggleDrawer(anchor, false)} \r\n    >\r\n      \r\n      <Sidebar />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button \r\n              onClick={toggleDrawer(anchor, true) }\r\n              variant=\"contained\"\r\n              size='large'\r\n              color={\"primary\"}\r\n              startIcon={<ListIcon/>}\r\n          >\r\n            Меню \r\n          </Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div> \r\n  );\r\n}\r\n ","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"smooth\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport './App.scss'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nimport {\r\n    Container, \r\n    Grid, \r\n    Paper\r\n} from '@material-ui/core';\r\n \r\nimport RouterComponent from \"./RouterComponent\";\r\nimport DrawerContainer from './components/DrawerContainer'\r\n\r\nimport ScroolToTop from './ScrollToTop'\r\n \r\n\r\nfunction App() {  \r\n    \r\n    return (\r\n        <Router>\r\n            <ScroolToTop/> \r\n            <Container className='main' maxWidth={'xl'}>\r\n            <DrawerContainer/>\r\n                <Grid container spacing={3}> \r\n                    {/* <Grid item xs={12} md={2} >\r\n                        <Paper className='sidebar' elevation={3}>\r\n                            <Sidebar/> \r\n                        </Paper>\r\n                    </Grid> */}\r\n                    <Grid item xs={12} >\r\n                        <Paper className='paper mt-2' elevation={3}>\r\n                           <RouterComponent/>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}