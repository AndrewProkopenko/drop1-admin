{"version":3,"sources":["libs/axios.js","components/Home/HomeList.js","components/Home/Home.js","components/Prefixes.js","components/Laptops/LaptopsServices.js","components/Meta/MetaForm.js","components/Meta/Meta.js","components/Services(Uslugi)/Services.js","components/Services(Uslugi)/Pages.js","components/Services(Uslugi)/InnerPages.js","RouterComponent.js","components/Sidebar.js","components/DrawerContainer.js","ScrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","interceptors","response","use","data","error","console","log","Promise","reject","HomeList","React","useState","content","setContent","services","setServices","newServTitle","setNewServTitle","newServSlug","setNewServSlug","newServPrice","setNewServPrice","file","setFile","newMetaTitle","setNewMetaTitle","newMetaDesc","setNewMetaDesc","isSuccessSave","setIsSuccessSave","useEffect","get","then","items","meta","title","description","classes","makeStyles","theme","flexDiv","display","alignItems","marginTop","input","label","marginRight","useStyles","hendleButtonSave","newData","put","Alert","severity","Typography","variant","Grid","container","spacing","item","xs","lg","FormGroup","TextField","type","required","value","onChange","e","target","className","Button","color","size","startIcon","onClick","Divider","onSubmit","preventDefault","newId","forEach","id","newService","name","newServiceList","slice","push","sentData","row","accept","event","files","htmlFor","component","undefined","length","map","IconButton","filtered","filter","deleteService","img","style","multiline","rows","dangerouslySetInnerHTML","__html","Home","Prefixes","LaptopsServices","MetaForm","props","hendleSubmit","hendleTitle","desc","hendleDesc","Meta","heading","setHeading","newTitle","setNewTitle","newDesc","setNewDesc","setMeta","page","useParams","location","useLocation","usePageViews","gutterBottom","newMeta","Object","assign","Services","Pages","list","border","palette","info","main","paddingLeft","paddingRight","paddingTop","paddingBottom","padding","fontWeight","unsave","marginLeft","success","light","margin","category","metaTitle","setMetaTitle","metaDesc","setMetaDesc","setTitle","slug","setSlug","listServices","setListServices","newServiceTitle","setNewServiceTitle","newServiceSlug","setNewServiceSlug","listBrands","setListBrands","newBrandsTitle","setNewBrandsTitle","newBrandsSlug","setNewBrandsSlug","isUnsavedService","setIsUnsavedService","isUnsavedBrand","setIsUnsavedBrand","isUnsavedMeta","setIsUnsavedMeta","isUnSaveFile","setIsUnSaveFile","addBrand","newList","newItem","addService","document","List","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","removeService","edge","aria-label","renderServices","removeBrand","renderBrands","window","scrollTo","top","behavior","InnerPages","setData","basicData","setBasicData","newSlug","setNewSlug","ccc","createElement","SetActive","text","getElementById","renderContent","a","newBasic","i","RouterComponent","exact","path","Sidebar","openComp","setOpenComp","openLap","setOpenLap","openMon","setOpenMon","openPO","setOpenPO","to","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","TemporaryDrawer","left","state","setState","toggleDrawer","anchor","open","Fragment","fontSize","Drawer","onClose","role","ScrollToTop","pathname","App","Container","maxWidth","justify","Paper","elevation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8699be6c.chunk.js","sourcesContent":["import axios from 'axios' \r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:4545',  \r\n})\r\n\r\ninstance.interceptors.response.use( (response) => {\r\n    if (response.data) return response.data\r\n    return response\r\n}, (error) => { \r\n    console.log(error)\r\n    return Promise.reject(error.response.data)\r\n})\r\n\r\nexport default instance","import React from \"react\"; \r\nimport axios from '../../libs/axios'\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { \r\n    Grid, \r\n    FormGroup, \r\n    TextField, \r\n    Button , \r\n    IconButton,\r\n    Typography,\r\n    Divider\r\n} from '@material-ui/core'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\nfunction HomeList () {\r\n\r\n    let [content, setContent] = React.useState([])\r\n    let [services, setServices] = React.useState([])\r\n\r\n    \r\n    let [newServTitle, setNewServTitle] = React.useState('')\r\n    let [newServSlug, setNewServSlug] = React.useState('')\r\n    let [newServPrice, setNewServPrice] = React.useState('')\r\n    let [file, setFile] = React.useState('')\r\n\r\n    let [newMetaTitle, setNewMetaTitle] = React.useState('')\r\n    let [newMetaDesc, setNewMetaDesc] = React.useState('')\r\n\r\n     \r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false) \r\n    \r\n    React.useEffect( () => {\r\n        axios.get('/main-list')\r\n            .then( (response) => {  \r\n                setContent(response.content)\r\n                setServices(response.items)\r\n                setNewMetaTitle(response.meta.title)\r\n                setNewMetaDesc(response.meta.description)\r\n            })\r\n    }, []) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        flexDiv: {\r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          marginTop: '1em', \r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n        label: { \r\n            marginRight: '1em',  \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    function handleInputContent(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n\r\n    function fileHendler(event) {  \r\n        setFile(event.target.files[0])\r\n    }\r\n\r\n     \r\n\r\n    function hendleServiceAdd(e) {\r\n        e.preventDefault()\r\n\r\n        // генерируем новое уникальноe id\r\n        let newId = 0\r\n        services.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        let newService  = { \r\n            \"title\": newServTitle,\r\n            \"slug\": newServSlug,\r\n            \"price\": newServPrice,\r\n            \"img\": file.name || '', \r\n            \"id\": newId\r\n        }\r\n\r\n        let newServiceList = services.slice()\r\n        newServiceList.push(newService)\r\n        setServices(newServiceList)\r\n\r\n        let sentData = { \r\n            \"content\": content,\r\n            \"items\" : newServiceList, \r\n            \"meta\": {\r\n                \"title\": newMetaTitle,\r\n                \"description\": newMetaDesc\r\n            }\r\n        } \r\n         \r\n        axios.put('/main-list', sentData)\r\n        .then( () => {\r\n            setIsSuccessSave(true) \r\n            setNewServTitle('')\r\n            setNewServSlug('')\r\n            setNewServPrice('')\r\n            setFile('')\r\n        }) \r\n    }\r\n\r\n    function deleteService(id) { \r\n        let filtered = services.filter( item => item.id !== id)\r\n\r\n        let sentData = {\r\n            \"content\": content,\r\n            \"items\" : filtered, \r\n            \"meta\": {\r\n                \"title\": newMetaTitle,\r\n                \"description\": newMetaDesc\r\n            }\r\n        } \r\n        setServices(filtered)\r\n        axios.put('/main-list', sentData)\r\n    }\r\n \r\n    function renderPreview() {  \r\n        return services.map( item => {  \r\n            return ( \r\n                <li  key={item.id} >\r\n\r\n                <div className='btn-absolute right'>\r\n                    <IconButton \r\n                        variant=\"contained\"\r\n                        color=\"secondary\"   \r\n                        size={'medium'}\r\n                        onClick={()=>{deleteService(item.id)}}\r\n                    ><DeleteIcon /></IconButton>\r\n                </div>\r\n                \r\n                   \r\n                    <div> \r\n                            {\r\n                                item.img \r\n                            }\r\n                        <div className=\"img-cont \">\r\n\r\n                            <div className='img' style={{ \r\n                                ['-webkitMask']: `url(./images/${item.img}) no-repeat center`,\r\n                                mask: `url(./images/${item.img}) no-repeat center`\r\n                            }}></div>\r\n \r\n                            {/* <img src='./images/3.svg' fill=\"#fff\" alt='hi'/>  */}\r\n                            \r\n                            {/* <svg><use xlinkHref=\"./images/3.svg\"></use></svg> */}\r\n                        </div>\r\n                    </div> \r\n                    <h4>{item.title}</h4>\r\n                 \r\n            </li> \r\n            )\r\n        })\r\n    }\r\n    \r\n    function hendleButtonSave() { \r\n        const newData = { \r\n            \"content\": content, \r\n            \"items\" : services,\r\n            \"meta\": {\r\n                \"title\": newMetaTitle,\r\n                \"description\": newMetaDesc\r\n            }\r\n        }\r\n        axios.put(\"/main-list\", newData)\r\n            .then( () => {\r\n                setIsSuccessSave(true) \r\n            })\r\n    }\r\n    return (\r\n        <div> \r\n             {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <Typography variant={\"h6\"}>Мета-данные для главной страницы</Typography> \r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} lg={6} >\r\n                        <FormGroup> \r\n                            <TextField type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите TITLE'\r\n                                    value={newMetaTitle} \r\n                                    onChange={(e)=>{  setIsSuccessSave(false);  setNewMetaTitle(e.target.value)}}\r\n                                    className={'mt-2'}\r\n                            />\r\n                            <TextField type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите DESCRIPTION'\r\n                                    value={newMetaDesc} \r\n                                    onChange={(e)=>{ setIsSuccessSave(false);   setNewMetaDesc(e.target.value)}}\r\n                                    className={'mt-2'}\r\n                            /> \r\n                        </FormGroup>\r\n                        <Button\r\n                            type={'submit'}\r\n                            className={\"mt-2 mb-3\"}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size={'medium'}\r\n                            startIcon={<SaveIcon/>}\r\n                            onClick={hendleButtonSave}\r\n                        >\r\n                            Сохранить мета\r\n                        </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n            <Grid container spacing={3}> \r\n                <Grid item xs={12} lg={6} className=\"mb-3\"> \r\n                    <Typography variant={\"h6\"}>Наши преимущества</Typography> \r\n                     \r\n                   \r\n                    <form \r\n                        onSubmit={hendleServiceAdd} \r\n                    >\r\n                        <FormGroup row> \r\n                            <TextField type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите название преимущества'\r\n                                    value={newServTitle}\r\n                                    \r\n                                    onChange={(e)=>{ setIsSuccessSave(false); setNewServTitle(e.target.value)}}\r\n                                    className={'mr-2 mt-2 flex-grow-1'}\r\n                            />\r\n                              \r\n                        </FormGroup>\r\n                        <FormGroup row>  \r\n                           \r\n                           <div className={classes.flexDiv}>\r\n                                <input\r\n                                    accept=\"image/svg+xml\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\" \r\n                                    type=\"file\"\r\n                                    onChange={fileHendler}\r\n\r\n                                />\r\n                                <label htmlFor=\"contained-button-file\" className={classes.label}>\r\n                                    <Button variant=\"outlined\"  color='info' component=\"div\">\r\n                                        Выбрать картинку\r\n                                    </Button>\r\n                                </label>\r\n                                {\r\n                                    file.name !== undefined ?\r\n                                    <h6 className={classes.label}>Выбрано: {file.name}</h6> :\r\n                                    <span>Примечание: для выбора картинки <br/> доступен только формат svg</span>\r\n                                }\r\n                                {\r\n                                    file.name && file.name.length > 0 &&\r\n                                    <Button \r\n                                        variant=\"outlined\"  \r\n                                        color='secondary' \r\n                                        component=\"div\"\r\n                                        onClick={() => { setFile('') }}\r\n                                    >\r\n                                        Удалить картинку\r\n                                    </Button>\r\n                                }\r\n                           </div>\r\n                        </FormGroup>\r\n                        \r\n                        <Button\r\n                            type={'submit'}\r\n                            className={\"mt-2\"}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size={'medium'}\r\n                            startIcon={<SaveIcon/>}\r\n                        >\r\n                            Добавить преимущество\r\n                        </Button>\r\n                    </form> \r\n                \r\n                </Grid>\r\n                <Grid item xs={12} lg={6}> \r\n                    <div className='preview-container'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <ul className='main-page-row'>\r\n                            {\r\n                                renderPreview()\r\n                            }\r\n                        </ul> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n            <Grid container spacing={3}> \r\n                <Grid item xs={12} lg={6} >\r\n                    <Typography variant={'h6'}>\r\n                        Введите текст для главной страницы  \r\n                    </Typography>\r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <FormGroup>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите контент'\r\n                                    value={content}\r\n                                    name='content'\r\n                                    onChange={handleInputContent} \r\n                                    multiline\r\n                                    rows={18} \r\n                                    className={'mt-2'}\r\n                        /> \r\n                    </FormGroup>\r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                        onClick={hendleButtonSave}\r\n                    >\r\n                        Сохранить текст главной страницы\r\n                    </Button> \r\n                </Grid>\r\n                <Grid item xs={12} lg={6} >\r\n                    <div className='preview-container  ml-1'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <div dangerouslySetInnerHTML={{__html: content}}></div> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeList","import React from 'react'\r\n\r\nimport HomeList from \"./HomeList\"\r\nimport HomeAdv from \"./HomeAdv\"\r\nimport HomeReviews from \"./HomeReviews\"\r\n\r\nimport {\r\n    Divider,\r\n    Button,\r\n\r\n} from '@material-ui/core';\r\n  \r\nfunction Home() {\r\n    \r\n    return (\r\n            <div> \r\n                {/* преимущества */}\r\n                <HomeList/>\r\n                \r\n                <Divider/>\r\n\r\n{/*                 \r\n                <HomeAdv/>\r\n                \r\n                <Divider/>\r\n\r\n                <HomeReviews/>    */}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport axios from '../libs/axios'\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { FormGroup, TextField, Button , Typography} from '@material-ui/core'\r\n\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction Prefixes () {\r\n\r\n    let [prefixes, setPrefixes] = React.useState([])\r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n\r\n    React.useEffect( () => {\r\n        axios.get('/prefixes')\r\n            .then(\r\n                response => {\r\n                    setPrefixes(response.laptops)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    function handleInput(e) {\r\n        setPrefixes(e.target.value)\r\n        setIsSuccessSave(false)\r\n    }\r\n\r\n    function hendleButtonSave(e) {\r\n        e.preventDefault()\r\n        const newPrefix = {\r\n            \"laptops\": prefixes\r\n        }\r\n        axios.put('/prefixes', newPrefix)\r\n            .then(\r\n                setIsSuccessSave(true)\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>Префикс для ноутбуков</Typography>\r\n            {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <form onSubmit={hendleButtonSave} >\r\n                <FormGroup>\r\n                    <TextField type='text'\r\n                               required\r\n                               variant=\"outlined\"\r\n                               label='Введите префикс'\r\n                               value={prefixes}\r\n                               name='prefix'\r\n                               onChange={handleInput}\r\n                               className={'mt-2'}\r\n                    />\r\n                </FormGroup>\r\n                <Button\r\n                    type={'submit'}\r\n                    className={\"mt-2\"}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size={'medium'}\r\n                    startIcon={<SaveIcon/>}\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Prefixes","import React from \"react\";\r\nimport axios from \"../../libs/axios\";\r\n\r\n\r\nimport {\r\n    Button,\r\n    List,\r\n    Grid, FormGroup, TextField, ListItemText, ListItemSecondaryAction, IconButton, ListItem\r\n} from '@material-ui/core';\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nfunction LaptopsServices () {\r\n\r\n    let [newServiceName, setNewServiceName] = React.useState('')\r\n    let [newServiceSlug, setNewServiceSlug] = React.useState('')\r\n\r\n    let [laptops, setLaptops] = React.useState([])\r\n    let {brands, services, companies} = laptops\r\n\r\n    let newServices\r\n    if(services) {\r\n        newServices  = services.slice()\r\n    }\r\n\r\n\r\n    React.useEffect( () => {\r\n        axios.get('/laptops')\r\n            .then(\r\n                response => {  \r\n                    setLaptops(response)\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    function handleInputNewService(e) {\r\n        if( e.target.name === 'name' )  setNewServiceName(e.target.value)\r\n        if( e.target.name === 'slug' )  setNewServiceSlug(e.target.value)\r\n    }\r\n\r\n    function addNewService(e) {\r\n        e.preventDefault()\r\n        let newId = 0\r\n        newServices.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        let createdService = {\r\n            \"name\": newServiceName,\r\n            \"slug\": newServiceSlug,\r\n            \"id\": newId\r\n        }\r\n        newServices.push(createdService)\r\n\r\n        const sentData = {\r\n            \"brands\" : brands,\r\n            \"services\": newServices, \r\n            \"companies\": companies\r\n        } \r\n\r\n        setLaptops(sentData)\r\n        axios.put('/laptops', sentData)\r\n\r\n        setNewServiceName('')\r\n        setNewServiceSlug('')\r\n    }\r\n\r\n    function removeService(id) {\r\n        let filtered = newServices.filter( item => item.id !== id)\r\n\r\n        const sentData = {\r\n            \"brands\" : brands,\r\n            \"services\": filtered\r\n        }\r\n\r\n        setLaptops(sentData)\r\n        axios.put('/laptops', sentData)\r\n    }\r\n\r\n    function renderServices() {\r\n        if(newServices) return (\r\n            <List className={'flex-list'}>\r\n                {\r\n                    newServices.map((item) => (\r\n                        <ListItem   key={item.id}>\r\n                            <ListItemText\r\n                                primary={`${item.name}`}\r\n                                secondary={`slug: ${item.slug}, id: ${item.id}`}\r\n                            />\r\n                            <ListItemSecondaryAction\r\n                                onClick={ () => removeService(item.id) }\r\n                            >\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item   >\r\n\r\n                {\r\n                    renderServices()\r\n                }\r\n                <h4 className={'heading'}>\r\n                    Добавить бренд\r\n                </h4>\r\n                <form\r\n                    onSubmit={addNewService}\r\n                >\r\n                    <FormGroup>\r\n                        <TextField type='text'\r\n                                   autoComplete={'off'}\r\n                                   required\r\n                                   variant=\"outlined\"\r\n                                   label='Введите название бренда'\r\n                                   name='name'\r\n                                   value={newServiceName}\r\n                                   onChange={handleInputNewService}\r\n                                   className={'mt-2'}\r\n                        />\r\n                        <TextField type='text'\r\n                                   autoComplete={'off'}\r\n                                   required\r\n                                   variant=\"outlined\"\r\n                                   label='Введите слаг бренда'\r\n                                   name='slug'\r\n                                   value={newServiceSlug}\r\n                                   onChange={handleInputNewService}\r\n                                   className={'mt-2'}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                    >\r\n                        Добавить бренд\r\n                    </Button>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default LaptopsServices","\r\nimport React from \"react\";\r\nimport {Button, FormGroup, TextField} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nfunction MetaForm(props) {\r\n\r\n    return (\r\n        <form onSubmit={props.hendleSubmit}>\r\n            <FormGroup>\r\n                <TextField type='text'\r\n                           required\r\n                           variant=\"outlined\"\r\n                           label='Введите TITLE'\r\n                           value={props.title}\r\n                           name='prefix'\r\n                           onChange={props.hendleTitle}\r\n                           className={'mt-2'}\r\n                />\r\n                <TextField type='text'\r\n                           required\r\n                           variant=\"outlined\"\r\n                           label='Введите DESCRIPTION'\r\n                           value={props.desc}\r\n                           name='prefix'\r\n                           onChange={props.hendleDesc}\r\n                           className={'mt-2'}\r\n                />\r\n\r\n            </FormGroup>\r\n            <Button\r\n                type={'submit'}\r\n                className={\"mt-2\"}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size={'medium'}\r\n                startIcon={<SaveIcon/>}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MetaForm","import React from \"react\";\r\nimport axios from \"../../libs/axios\"\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\nimport { Typography} from \"@material-ui/core\";\r\nimport MetaForm from \"./MetaForm\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nfunction Meta(props) {\r\n\r\n    let [heading, setHeading] = React.useState('')\r\n    let [newTitle, setNewTitle] = React.useState('')\r\n    let [newDesc, setNewDesc] = React.useState('')\r\n\r\n    let [meta, setMeta] = React.useState([])\r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n\r\n    const {page} = useParams() \r\n\r\n    function usePageViews() {\r\n        let location = useLocation(); \r\n        React.useEffect(() => {\r\n\r\n            setIsSuccessSave(false)\r\n            axios.get('/meta')\r\n                .then(\r\n                    response => { \r\n                        setMeta(response) \r\n                        setHeading(response[page].name)\r\n                        setNewTitle(response[page].title)\r\n                        setNewDesc(response[page].description)\r\n                    }\r\n                )\r\n        }, [location]);\r\n    }\r\n\r\n\r\n    function hendleSubmit(e) {\r\n        e.preventDefault()\r\n        let newMeta = Object.assign({}, meta)\r\n        newMeta[page] = {\r\n            \"title\" : newTitle,\r\n            \"description\": newDesc,\r\n            \"name\": heading\r\n        }\r\n        console.log(newMeta, meta)\r\n        axios.put('/meta', newMeta)\r\n            .then(()=>{\r\n                setIsSuccessSave(true)\r\n            })\r\n\r\n    }\r\n\r\n    function hendleTitle(e) {\r\n        setNewTitle(e.target.value)\r\n        setIsSuccessSave(false)\r\n    }\r\n    function hendleDesc(e) {\r\n        setNewDesc(e.target.value)\r\n        setIsSuccessSave(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            { usePageViews() }\r\n            <Typography variant=\"h6\" gutterBottom={true}>\r\n                { heading }\r\n            </Typography>\r\n            {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <MetaForm\r\n                title={newTitle}\r\n                desc={newDesc}\r\n                hendleTitle={hendleTitle}\r\n                hendleDesc={hendleDesc}\r\n                hendleSubmit={hendleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport axios from '../../libs/axios'\r\n\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Checkbox,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    Typography, \r\n    Button,\r\n    FormGroup,\r\n    TextField,\r\n    Divider\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nfunction Services() {\r\n\r\n    let [list, setList] = React.useState([]) \r\n    let [content, setContent] = React.useState('') \r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false) \r\n\r\n\r\n    React.useEffect(  () => { \r\n        axios.get('/uslugi')\r\n            .then(\r\n                response => {\r\n                    setList(response.items) \r\n                    setContent(response.content)\r\n                }\r\n            )\r\n    }, []) \r\n\r\n    console.log(list)\r\n    function handleInput(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    } \r\n      \r\n    function handleToggle(id) { \r\n        let newList = list.slice()\r\n        const currentItem = newList[id-1]\r\n        currentItem.show = !currentItem.show\r\n\r\n        setList(newList) \r\n        setIsSuccessSave(false) \r\n    };\r\n\r\n    function saveData(e) {\r\n        e.preventDefault() \r\n        const newList = {\r\n            \"uslugi\" : list,\r\n            \"content\": content\r\n        }\r\n        axios.put('/pages/', newList)\r\n        .then( () => { \r\n                setIsSuccessSave(true)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={'h6'}>\r\n                Введите текст для страницы \"Услуги\"\r\n            </Typography>\r\n            {\r\n                isSuccessSave &&\r\n                <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n            }\r\n            <FormGroup>\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Введите контент(h1 и тд.)'\r\n                            value={content}\r\n                            name='content'\r\n                            onChange={handleInput} \r\n                            multiline\r\n                            rows={3} \r\n                            className={'mt-2'}\r\n                />\r\n            </FormGroup>\r\n\r\n            <div className='preview-container'>\r\n                <h3 className='preview-head'>Превью :</h3>\r\n                <Divider/>\r\n                <div dangerouslySetInnerHTML={{__html: content}}></div> \r\n            </div>\r\n\r\n            <Typography variant={'h6'}  className='mt-2'>\r\n                Выберите страницы, которые будут показаны в списке \r\n            </Typography>\r\n            <List >\r\n                    {\r\n                        list.map((value) => {\r\n                            const labelId = `checkbox-list-label-${value.id}`; \r\n                            return (\r\n                                <ListItem key={value.id} role={undefined} dense button onClick={()=>{handleToggle(value.id)}}>\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            checked={value.show}\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText \r\n                                        id={labelId} \r\n                                        primary={`${value.name}`}  \r\n                                    />\r\n                                </ListItem>\r\n                            );\r\n                        })\r\n                    } \r\n            </List>\r\n            \r\n            <Button \r\n                className={\"mt-2\"}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size={'medium'}\r\n                startIcon={<SaveIcon/>}\r\n                onClick={saveData}\r\n            >\r\n                Сохранить\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","import React from 'react'\r\nimport axios from '../../libs/axios'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\nimport { \r\n    Typography,\r\n    FormGroup,  \r\n    TextField , \r\n    Button,\r\n    Divider,\r\n    Grid,\r\n    List,\r\n    ListItem, \r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\nimport { Alert } from '@material-ui/lab';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'; \r\n \r\n \r\n// функция для редактирования текста в компонентах  \r\nfunction Pages() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        list: {\r\n            border: `2px solid ${theme.palette.info.main}`, \r\n            marginTop: 15,  \r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            \r\n        }, \r\n        heading: {\r\n            display: 'block', \r\n            padding: '16px', \r\n            fontWeight: 700\r\n        },\r\n        unsave: {\r\n            display:'block',\r\n            color: theme.palette.error.main, \r\n            marginLeft: 16,\r\n            marginTop: 15\r\n        }, \r\n       \r\n        meta: { \r\n            marginTop: 15,  \r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            border: `2px solid ${theme.palette.success.light}`, \r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        label: { \r\n            display: 'flex',\r\n            alignItems: 'center' ,\r\n            margin: \"0 1em 0 0\"\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const {category} = useParams()\r\n \r\n    let [metaTitle, setMetaTitle] = React.useState('')\r\n    let [metaDesc, setMetaDesc] = React.useState('')\r\n\r\n    let [heading, setHeading] = React.useState('') \r\n    let [title, setTitle] = React.useState('') \r\n    let [content, setContent] = React.useState('')   \r\n    let [slug, setSlug] = React.useState('')    \r\n    let [file, setFile] = React.useState('')\r\n    let [listServices, setListServices] = React.useState('')   \r\n    let [newServiceTitle, setNewServiceTitle] = React.useState('')   \r\n    let [newServiceSlug, setNewServiceSlug] = React.useState('')   \r\n\r\n    let [listBrands, setListBrands] = React.useState('')   \r\n    let [newBrandsTitle, setNewBrandsTitle] = React.useState('')   \r\n    let [newBrandsSlug, setNewBrandsSlug] = React.useState('')   \r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n    let [isUnsavedService, setIsUnsavedService] = React.useState(false)\r\n    let [isUnsavedBrand, setIsUnsavedBrand] = React.useState(false)\r\n    let [isUnsavedMeta, setIsUnsavedMeta] = React.useState(false)\r\n    let [isUnSaveFile, setIsUnSaveFile] = React.useState(false)\r\n     \r\n    \r\n    document.title = metaTitle\r\n \r\n    function usePageViews() {\r\n        let location = useLocation(); \r\n        React.useEffect(() => {\r\n             \r\n\r\n            setIsSuccessSave(false)\r\n            axios.get(`${category}`)\r\n                .then(\r\n                    response => { \r\n                        console.log(response) \r\n                        setMetaTitle(response.meta.title)\r\n                        setMetaDesc(response.meta.description)\r\n                        setContent(response.content)\r\n                        setTitle(response.title)\r\n                        setHeading(response.title)  \r\n                        setSlug(response.slug)\r\n                        setFile(response.img)\r\n                        setListServices(response['list-service-menu'])\r\n                        if(response['list-brands-menu']) {\r\n                            setListBrands(response['list-brands-menu'])\r\n                        }\r\n                        else setListBrands([])\r\n                    }\r\n                ) \r\n        }, [location]);\r\n    }\r\n   \r\n    function handleInputContent(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n    function handleInputTitle(e) {\r\n        setTitle(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n    function handleInputSlug(e) {\r\n        setTitle(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n\r\n    function removeBrand(id) {  \r\n        let filtered = listBrands.filter( item => item.id !== id)\r\n \r\n        setListBrands(filtered)\r\n        \r\n        setIsUnsavedBrand(true)\r\n    }\r\n    function addBrand(e) { \r\n        e.preventDefault()\r\n        let newId = 0\r\n        let newList = listBrands.slice()\r\n\r\n        newList.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        const newItem = { \r\n            \"title\": newBrandsTitle,\r\n            \"slug\": newBrandsSlug, \r\n            \"id\": newId, \r\n            \"content\": \"\",\r\n            \"meta\": {\r\n                \"title\": \"\", \r\n                \"description\": \"\"\r\n            }\r\n        }\r\n        newList.push(newItem)\r\n\r\n        setListBrands(newList)\r\n        setIsUnsavedBrand(true)\r\n\r\n        setNewBrandsSlug('')\r\n        setNewBrandsTitle('')\r\n    }\r\n\r\n    function removeService(id) {  \r\n        let filtered = listServices.filter( item => item.id !== id)\r\n \r\n        setListServices(filtered)\r\n        \r\n        setIsUnsavedService(true)\r\n    }\r\n    function addService(e) { \r\n        e.preventDefault()\r\n        let newId = 0\r\n        let newList = listServices.slice()\r\n\r\n        newList.forEach(item => {\r\n            if (item.id > newId) newId = item.id\r\n        });\r\n        newId++\r\n\r\n        const newItem = { \r\n            \"title\": newServiceTitle,\r\n            \"slug\": newServiceSlug, \r\n            \"id\": newId, \r\n            \"content\": \"\", \r\n            \"meta\": {\r\n                \"title\": \"\", \r\n                \"description\": \"\"\r\n            }\r\n        }\r\n        newList.push(newItem)\r\n\r\n        setListServices(newList)\r\n        setIsUnsavedService(true)\r\n\r\n        setNewServiceSlug('')\r\n        setNewServiceTitle('')\r\n    } \r\n     \r\n    function hendleButtonSave() {  \r\n        const newData = {\r\n            \"title\": title,\r\n            \"slug\": slug, \r\n            \"img\": file,\r\n            \"meta\": {\r\n                \"title\": metaTitle,\r\n                \"description\" : metaDesc\r\n            },\r\n            \"content\": content, \r\n            \"list-service-menu\":  listServices,\r\n            \"list-brands-menu\":  listBrands\r\n        }\r\n        // console.log(newData)\r\n        axios.put(`/${category}`, newData)\r\n            .then( () => {\r\n                setIsSuccessSave(true)\r\n                setIsUnsavedService(false)\r\n                setIsUnsavedBrand(false)\r\n                setIsUnsavedMeta(false)\r\n                setIsUnSaveFile(false)\r\n            })\r\n            .then(()=>{\r\n                window.scrollTo({\r\n                    top: 0, \r\n                    behavior: \"smooth\"\r\n                });\r\n            })\r\n    }\r\n\r\n\r\n\r\n    function renderServices() { \r\n        if(listServices) return (\r\n            <List className={classes.list}>\r\n                <Typography variant='div' className={classes.heading}>\r\n                    Список страниц (используется в шапке и на главной )\r\n                </Typography>\r\n                {\r\n                    listServices.map( (item) => (\r\n                \r\n                        <ListItem key={item.id}>\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={`slug: ${item.slug} `}\r\n                            > \r\n                            </ListItemText>\r\n                            <ListItemSecondaryAction\r\n                                    onClick={ () => removeService(item.id) }\r\n                            >\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction> \r\n                        </ListItem>\r\n                    )) \r\n                }\r\n                \r\n                <form onSubmit={addService}>\r\n                <FormGroup row>\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте название страницы'\r\n                                value={newServiceTitle}\r\n                                name='title'\r\n                                onChange={(e) => { setNewServiceTitle(e.target.value)  }}  \r\n                                className={'mt-2 mr-2 ml-1 flex-grow-1'}\r\n                    /> \r\n                </FormGroup>\r\n                <FormGroup row>\r\n                   \r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте slug страницы'\r\n                                value={newServiceSlug}\r\n                                name='title'\r\n                                onChange={(e) => { setNewServiceSlug(e.target.value)  }}  \r\n                                className={'mt-2 ml-1 mr-2'}\r\n                    /> \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2 mr-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'small'}\r\n                        startIcon={<AddCircleOutlineIcon/>} \r\n                    >\r\n                        Добавить\r\n                    </Button> \r\n                    \r\n                </FormGroup>\r\n                \r\n                </form>\r\n\r\n                \r\n                {\r\n                    isUnsavedService && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n                }\r\n            </List>\r\n        ) \r\n    }\r\n\r\n    function renderBrands() {\r\n        if(listBrands.length > 0) return (\r\n            <List className={classes.list}>\r\n                <Typography variant='div' className={classes.heading}>\r\n                    Список Брендов (используется в шапке и на главной )\r\n                </Typography>\r\n                {\r\n                    listBrands.map( (item) => (\r\n                \r\n                        <ListItem key={item.id}>\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={`slug: ${item.slug} `}\r\n                            > \r\n                            </ListItemText>\r\n                            <ListItemSecondaryAction\r\n                                    onClick={ () => removeBrand(item.id) }\r\n                            >\r\n                                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction> \r\n                        </ListItem>\r\n                    )) \r\n                }\r\n                <form onSubmit={addBrand}>\r\n                <FormGroup row>\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте название страницы'\r\n                                value={newBrandsTitle}\r\n                                name='title'\r\n                                onChange={(e) => { setNewBrandsTitle(e.target.value)  }}  \r\n                                className={'mt-2 mr-2 ml-1 flex-grow-1'}\r\n                    />\r\n                    <TextField  type='text'\r\n                                required\r\n                                variant=\"outlined\"\r\n                                label='Добавьте slug страницы'\r\n                                value={newBrandsSlug}\r\n                                name='title'\r\n                                onChange={(e) => { setNewBrandsSlug(e.target.value)  }}  \r\n                                className={'mt-2 mr-2'}\r\n                    /> \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2 mr-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'small'}\r\n                        startIcon={<AddCircleOutlineIcon/>} \r\n                    >\r\n                        Добавить\r\n                    </Button> \r\n                    \r\n                </FormGroup>\r\n                </form>\r\n                {\r\n                    isUnsavedBrand && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n                }\r\n            </List>\r\n        )\r\n    }\r\n\r\n    function renderMeta() {\r\n        return <div className={classes.meta}>\r\n             <Typography variant='div' className={classes.heading}>\r\n                Мета-данные для страницы \"{heading}\"\r\n            </Typography> \r\n            <FormGroup>\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Title'\r\n                            value={metaTitle} \r\n                            onChange={(e) => { setMetaTitle(e.target.value); setIsUnsavedMeta(true)  }}  \r\n                            className={'mt-2 mr-2  flex-grow-1'}\r\n                />\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Description'\r\n                            value={metaDesc} \r\n                            onChange={(e) => { setMetaDesc(e.target.value); setIsUnsavedMeta(true)    }}  \r\n                            className={'mt-2 mr-2'}\r\n                /> \r\n                \r\n                \r\n            </FormGroup> \r\n            {\r\n                isUnsavedMeta && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n            }\r\n        </div>\r\n    }\r\n\r\n   \r\n    return (\r\n        <div>\r\n            {usePageViews()}\r\n            <Grid container>\r\n                <Grid item lg={6}>\r\n                    <Typography variant={'h6'}>\r\n                        Введите текст для страницы \"{title}\"\r\n                    </Typography>\r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <FormGroup row>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите название страницы'\r\n                                    value={title}\r\n                                    name='title'\r\n                                    onChange={handleInputTitle}  \r\n                                    className={'mt-2 mr-2 flex-grow-1'}\r\n                        />\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите slug страницы'\r\n                                    value={slug}\r\n                                    name='title'\r\n                                    onChange={handleInputSlug}  \r\n                                    className={'mt-2'}\r\n                        /> \r\n                        \r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите контент'\r\n                                    value={content}\r\n                                    name='content'\r\n                                    onChange={handleInputContent} \r\n                                    multiline\r\n                                    rows={18} \r\n                                    className={'mt-2'}\r\n                        /> \r\n                    </FormGroup>\r\n                      {/* images */}\r\n                      <FormGroup row className='mt-2'>   \r\n                            <input\r\n                                accept=\"image/svg+xml\"\r\n                                className={classes.input}\r\n                                id=\"contained-button-file\" \r\n                                type=\"file\"\r\n                                onChange={(e) => { setIsUnSaveFile(true); setFile(e.target.files[0].name) }} \r\n                            />\r\n                            <label htmlFor=\"contained-button-file\" className={classes.label}>\r\n                                <Button variant=\"outlined\"  color='info' component=\"div\">\r\n                                    Выбрать картинку\r\n                                </Button>\r\n                            </label>\r\n                            {\r\n                                file !== '' ?\r\n                                (<h6 className={classes.label}>Выбрано: {file} </h6>) :\r\n                                <span>Примечание: для выбора картинки <br/> доступен только формат svg</span>\r\n                            }\r\n                            {\r\n                                file.length > 0 &&\r\n                                <Button \r\n                                    variant=\"outlined\"  \r\n                                    color='secondary' \r\n                                    component=\"div\"\r\n                                    onClick={() => { setFile('') }}\r\n                                >\r\n                                    Удалить картинку\r\n                                </Button>\r\n                            }\r\n                             \r\n                    </FormGroup>\r\n                    {isUnSaveFile && <div className={classes.unsave}>Картинку после добавления нужно сохранить кнопкой внизу</div>}\r\n                    \r\n                    \r\n                    {\r\n                        renderServices()\r\n                    }\r\n\r\n                    {\r\n                        renderBrands()\r\n                    }\r\n\r\n                  \r\n\r\n                    {\r\n                        renderMeta()\r\n                    }\r\n                    \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                        onClick={hendleButtonSave}\r\n                    >\r\n                        Сохранить\r\n                    </Button> \r\n                    \r\n                    \r\n                </Grid>      \r\n\r\n                <Grid item lg={6}> \r\n                    <div className='preview-container ml-1'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <div dangerouslySetInnerHTML={{__html: content}}></div> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n","import React from 'react'\r\nimport axios from '../../libs/axios'\r\nimport {useParams, useLocation} from 'react-router-dom'\r\n\r\n\r\nimport { \r\n    Typography,\r\n    FormGroup,  \r\n    TextField , \r\n    Button,\r\n    Divider,\r\n    Grid, \r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction InnerPages() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        \r\n        heading: {\r\n            display: 'block', \r\n            padding: '16px', \r\n            fontWeight: 700\r\n        },\r\n       \r\n        meta: { \r\n            marginTop: 15,  \r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            border: `2px solid ${theme.palette.success.light}`, \r\n        },\r\n        unsave: {\r\n            color: theme.palette.error.main, \r\n            marginLeft: 16\r\n        }, \r\n      }));\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const {category, page} = useParams()\r\n    \r\n    let [metaTitle, setMetaTitle] = React.useState('')\r\n    let [metaDesc, setMetaDesc] = React.useState('')\r\n\r\n    let [data, setData] = React.useState({})\r\n    let [basicData, setBasicData] = React.useState({})\r\n    \r\n    let [content, setContent] = React.useState('')   \r\n    let [listServices, setListServices] = React.useState([]) \r\n    let [listBrands, setListBrands] = React.useState('')   \r\n\r\n    let [newTitle, setNewTitle] = React.useState('')   \r\n    let [newSlug, setNewSlug] = React.useState('')   \r\n\r\n    let [isSuccessSave, setIsSuccessSave] = React.useState(false)\r\n    let [isUnsavedMeta, setIsUnsavedMeta] = React.useState(false)\r\n\r\n    document.title = metaTitle\r\n    \r\n    let ccc = React.createElement('div', null, content);\r\n\r\n    function renderContent() { \r\n        let text = document.getElementById('content')\r\n        console.log(text)\r\n    }\r\n    renderContent()\r\n\r\n    function usePageViews() {\r\n        let location = useLocation(); \r\n        React.useEffect( async () => {\r\n              \r\n            setIsSuccessSave(false)\r\n            await axios.get(`${category}`)\r\n                .then(\r\n                    response => {  \r\n                        setBasicData(response) \r\n                         \r\n                        if(response['list-brands-menu']) {\r\n                            setListBrands(response['list-brands-menu'])\r\n                        }\r\n                        else setListBrands([])\r\n                        if(response['list-service-menu']) {\r\n                            setListServices(response['list-service-menu'])\r\n                            console.log(response['list-service-menu'])\r\n                        }\r\n                         \r\n                        SetActive(response)\r\n                    }\r\n                )\r\n                  \r\n        }, [location]);\r\n    }\r\n\r\n    function SetActive(response) {\r\n   \r\n        if(response['list-service-menu'] && response['list-service-menu'].length > 0) {\r\n            response['list-service-menu'].forEach( (item) => {\r\n                if(item.slug == page) {\r\n                    setContent(item.content)\r\n                    setData(item) \r\n                    setNewTitle(item.title)\r\n                    setNewSlug(item.slug)\r\n                    setMetaTitle(item.meta.title)\r\n                    setMetaDesc(item.meta.description)\r\n                }\r\n            })    \r\n        } \r\n        if(response['list-brands-menu'] && response['list-brands-menu'].length > 0) {  \r\n            response['list-brands-menu'].forEach( (item) => {\r\n                if(item.slug === page) {\r\n                    setContent(item.content)\r\n                    setData(item)  \r\n                    setNewTitle(item.title)\r\n                    setNewSlug(item.slug)\r\n                    setMetaTitle(item.meta.title)\r\n                    setMetaDesc(item.meta.description)\r\n                } \r\n            })\r\n        } \r\n\r\n    } \r\n    \r\n    \r\n    function handleInputContent(e) {\r\n        setContent(e.target.value) \r\n        setIsSuccessSave(false)\r\n    }  \r\n\r\n    function hendleButtonSave() {  \r\n        let newBasic = {\r\n            \"title\": basicData.title,\r\n            \"slug\": basicData.slug,\r\n            \"content\": basicData.content,\r\n            \"meta\": basicData.meta,\r\n            \"img\": basicData.img\r\n        }\r\n        // newData новый элемент, тот который только что правили\r\n        let newData = {\r\n            \"id\": data.id,\r\n            \"title\": newTitle,\r\n            \"slug\": newSlug, \r\n            \"content\": content,\r\n            \"meta\": {\r\n                \"title\": metaTitle,\r\n                \"description\" : metaDesc\r\n            }\r\n        }\r\n        if(listServices.length > 0) {\r\n            newBasic[\"list-service-menu\"] =  listServices \r\n        }\r\n        if(listBrands.length > 0) {\r\n            newBasic[\"list-brands-menu\"] =  listBrands  \r\n        }\r\n \r\n        for( let i = 0; i < basicData['list-brands-menu'].length; i++) { \r\n            if(basicData['list-brands-menu'][i].slug == page) {  \r\n                newBasic['list-brands-menu'][i] = newData\r\n            }\r\n        }\r\n\r\n        for( let i = 0; i < basicData['list-service-menu'].length; i++) { \r\n            if(basicData['list-service-menu'][i].slug == page) {  \r\n                newBasic['list-service-menu'][i] = newData\r\n            }\r\n        }\r\n        \r\n        console.log(category)\r\n        // console.log(newBasic)\r\n        axios.put(`/${category}`, newBasic)\r\n            .then( () => {\r\n                setIsSuccessSave(true) \r\n            })\r\n            .then(()=>{\r\n                window.scrollTo({\r\n                    top: 0, \r\n                    behavior: \"smooth\"\r\n                });\r\n            })\r\n    }\r\n\r\n    \r\n    function renderMeta() {\r\n        return <div className={classes.meta}>\r\n             <Typography variant='div' className={classes.heading}>\r\n                Мета-данные для страницы \"{newTitle}\"\r\n            </Typography> \r\n            <FormGroup>\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Title'\r\n                            value={metaTitle} \r\n                            onChange={(e) => { setMetaTitle(e.target.value); setIsUnsavedMeta(true)  }}  \r\n                            className={'mt-2 mr-2  flex-grow-1'}\r\n                />\r\n                <TextField  type='text'\r\n                            required\r\n                            variant=\"outlined\"\r\n                            label='Description'\r\n                            value={metaDesc} \r\n                            onChange={(e) => { setMetaDesc(e.target.value); setIsUnsavedMeta(true)    }}  \r\n                            className={'mt-2 mr-2'}\r\n                /> \r\n                \r\n                \r\n            </FormGroup> \r\n            {\r\n                isUnsavedMeta && <h5 className={classes.unsave}>Не забудьте сохранить</h5>\r\n            }\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { usePageViews() }  \r\n            <Grid container>\r\n                <Grid item lg={6}>\r\n                    <Typography variant={'h6'}>\r\n                        Введите текст для страницы \"{newTitle}\"\r\n                    </Typography>\r\n                    {\r\n                        isSuccessSave &&\r\n                        <Alert severity=\"success\">Успешно сохранено!</Alert>\r\n                    }\r\n                    <FormGroup row>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Добавьте название страницы'\r\n                                    value={newTitle} \r\n                                    onChange={(e) => { setNewTitle(e.target.value)  }}  \r\n                                    className={'mt-2 mr-2 flex-grow-1'}\r\n                        />\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Добавьте slug страницы'\r\n                                    value={newSlug} \r\n                                    onChange={(e) => { setNewSlug(e.target.value)  }}  \r\n                                    className={'mt-2 '}\r\n                        />   \r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <TextField  type='text'\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    label='Введите контент'\r\n                                    value={content}\r\n                                    name='content'\r\n                                    onChange={handleInputContent} \r\n                                    multiline\r\n                                    rows={18} \r\n                                    className={'mt-2'}\r\n                        /> \r\n                    </FormGroup>\r\n                    \r\n                    \r\n                    {\r\n                        renderMeta()\r\n                    }\r\n                     \r\n                    <Button\r\n                        type={'submit'}\r\n                        className={\"mt-2\"}\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        size={'medium'}\r\n                        startIcon={<SaveIcon/>}\r\n                        onClick={hendleButtonSave}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n                     \r\n                </Grid>      \r\n\r\n                <Grid item lg={6}> \r\n                    <div className='preview-container ml-1'>\r\n                        <h3 className='preview-head'>Превью :</h3>\r\n                        <Divider/>\r\n                        <div>{ccc}</div>\r\n                        \r\n                        \r\n                         \r\n                        <div id='content' dangerouslySetInnerHTML={{__html: content}}></div> \r\n                    </div> \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InnerPages ","import React from \"react\";\r\nimport { Route, Switch} from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home/Home\";\r\nimport Prefixes from \"./components/Prefixes\";\r\nimport Laptops from \"./components/Laptops/Laptops\";\r\nimport Meta from \"./components/Meta/Meta\"\r\nimport Services from \"./components/Services(Uslugi)/Services\";\r\nimport Pages from \"./components/Services(Uslugi)/Pages\";\r\nimport InnerPages from \"./components/Services(Uslugi)/InnerPages\";\r\n\r\nfunction RouterComponent () {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} /> \r\n\r\n            <Route exact path=\"/content/pages/:category\" component={Pages}  />\r\n\r\n            <Route exact path=\"/content/inner-pages/:category/:page\" component={InnerPages}  />\r\n\r\n            <Route path=\"/meta/:page\" component={Meta}   />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default  RouterComponent","import React from \"react\";\r\n// import axios from '../libs/axios'\r\nimport axios from 'axios'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\r\nimport {List, ListItem, ListItemText, Collapse} from \"@material-ui/core\";\r\n\r\nimport data from '../data/database.json'\r\n\r\nfunction Sidebar() {\r\n\r\n    const [openComp, setOpenComp] = React.useState(false); \r\n    const [openLap, setOpenLap] = React.useState(false); \r\n    const [openMon, setOpenMon] = React.useState(false); \r\n    const [openPO, setOpenPO] = React.useState(false);  \r\n  \r\n\r\n    // React.useEffect(() => {  \r\n    //     fetchSidebarData()\r\n    // }, []); \r\n\r\n    // function fetchSidebarData() {\r\n    //     axios.get('http://localhost:4545/')\r\n    //     .then(\r\n    //         response => { \r\n    //             console.log(response)  \r\n    //         }\r\n    //     ) \r\n    // }\r\n \r\n    return (\r\n \r\n        <List >\r\n \r\n\r\n\r\n            <NavLink exact to='/'>\r\n                <ListItem button>\r\n                    <ListItemText primary={'Главная '}/>\r\n                </ListItem>\r\n            </NavLink>  \r\n            \r\n            {/* contacts */}\r\n            <NavLink exact to='/content/pages/contacts'>\r\n                <ListItem button>\r\n                    <ListItemText primary={'Контакты'}/>\r\n                </ListItem>\r\n            </NavLink>\r\n            \r\n\r\n                {/* 1 */}\r\n               <ListItem button onClick={() => { setOpenComp(!openComp); }}>\r\n                    <ListItemText primary=\"Ремонт компьютеров\" secondary={\"Наполнение страниц\"} />\r\n                    {openComp ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openComp} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/content/pages/remont-kompyutepov'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт компьютеров - Главная'} className={'pl-3'} />\r\n                            </ListItem>\r\n                        </NavLink> \r\n                        {\r\n                            data['remont-kompyutepov']['list-service-menu'].map( (item) => (\r\n                                <NavLink key={item.id} exact to={`/content/inner-pages/remont-kompyutepov/${item.slug}`}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={item.title} className={'pl-3'} />\r\n                                    </ListItem>\r\n                                </NavLink> \r\n                            ))\r\n                        }\r\n                         \r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* 2 */}\r\n               <ListItem button onClick={() => { setOpenLap(!openLap); }}>\r\n                    <ListItemText primary=\"Ремонт ноутбуков\" secondary={\"Наполнение страниц\"} />\r\n                    {openLap ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openLap} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/content/pages/remont-noutbukov'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт ноутбуков - Главная '} className={'pl-3'}  />\r\n                            </ListItem>\r\n                        </NavLink>\r\n                        {\r\n                            data['remont-noutbukov']['list-service-menu'].map( (item) => (\r\n                                <NavLink key={item.id} exact to={`/content/inner-pages/remont-noutbukov/${item.slug}`}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={item.title} className={'pl-3'} />\r\n                                    </ListItem>\r\n                                </NavLink> \r\n                            ))\r\n                        }\r\n                        {\r\n                            data['remont-noutbukov']['list-brands-menu'].map( (item) => (\r\n                                <NavLink key={item.id} exact to={`/content/inner-pages/remont-noutbukov/${item.slug}`}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={item.title} className={'pl-3'} />\r\n                                    </ListItem>\r\n                                </NavLink> \r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* 3 */}\r\n               <ListItem button onClick={() => { setOpenMon(!openMon); }}>\r\n                    <ListItemText primary=\"Ремонт мониторов\" secondary={\"Наполнение страниц\"} />\r\n                    {openMon ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openMon} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <NavLink exact to='/content/pages/remont-monitorov'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Ремонт мониторов - Главная '} className={'pl-3'}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    </List>\r\n                </Collapse>\r\n\r\n                {/* 4 */}\r\n               <ListItem button onClick={() => { setOpenPO(!openPO); }}>\r\n                    <ListItemText primary=\"Настройка ПО\" secondary={\"Наполнение страниц\"} />\r\n                    {openPO ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openPO} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding> \r\n                        <NavLink exact to='/content/pages/nastrojka-po'>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'Настройка ПО - Главная '} className={'pl-3'} />\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    </List>\r\n                </Collapse>\r\n\r\n                \r\n              \r\n        </List> \r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react';  \r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button'; \r\nimport ListIcon from '@material-ui/icons/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nimport Sidebar from \"./Sidebar\"; \r\n \r\n\r\nexport default function TemporaryDrawer() { \r\n  const [state, setState] = React.useState({ \r\n    left: false, \r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => { \r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n \r\n  const list = (anchor) => (\r\n    <div \r\n      className='sidebar'\r\n      role=\"presentation\"\r\n      // onClick={toggleDrawer(anchor, false)} \r\n    >\r\n      \r\n      <Sidebar />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <IconButton \r\n              aria-label=\"add an alarm\" \r\n              onClick={toggleDrawer(anchor, true) }\r\n              // variant=\"contained\"\r\n              size='medium'\r\n              color={\"primary\"}\r\n              startIcon={<MenuIcon/>}\r\n              className={'sidebar-btn'}\r\n          >  <MenuIcon fontSize='large'/>\r\n          </IconButton>\r\n            \r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment> \r\n  );\r\n}\r\n ","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"smooth\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport './App.scss'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nimport {\r\n    Container, \r\n    Grid, \r\n    Paper\r\n} from '@material-ui/core';\r\n \r\nimport RouterComponent from \"./RouterComponent\";\r\nimport DrawerContainer from './components/DrawerContainer'\r\n\r\nimport ScroolToTop from './ScrollToTop'\r\n \r\n\r\nfunction App() {  \r\n    \r\n    return (\r\n        <Router>\r\n            <ScroolToTop/> \r\n            <Container className='main' maxWidth={'xl'}>\r\n                <DrawerContainer/>\r\n                <Grid container spacing={3} justify=\"flex-end\"> \r\n                    {/* <Grid item xs={12} md={2} >\r\n                        <Paper className='sidebar' elevation={3}>\r\n                            <Sidebar/> \r\n                        </Paper>\r\n                    </Grid> */}\r\n                    <Grid item xs={12} >\r\n                        <Paper className='paper  ml-60 ' elevation={3}>\r\n                           <RouterComponent/>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}